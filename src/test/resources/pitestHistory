231
<classHistory><id hierarchicalHash="d21274d6"><classId hash="469539627"><name><name>com/shopify/client/model/ShopifyVariantCreationRequest$AvailableStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1670388"><classId hash="23528328"><name><name>com/shopify/client/model/ShopifyOrderRisk</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="13eb47ccd"><classId hash="2292097826"><name><name>com/shopify/client/model/ShopifyVariantCreationRequest$WeightStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="9dd46164"><classId hash="485256179"><name><name>com/shopify/client/model/ShopifyProductCreationRequest$BuildStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1897e3155"><classId hash="3755650080"><name><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$OrderIdStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="25cd9308"><classId hash="634229512"><name><name>com/shopify/client/model/ShopifyShop</name></name></classId></id><coverageId>1f219eb0</coverageId></classHistory>
<classHistory><id hierarchicalHash="cfd9ada1"><classId hash="3255220471"><name><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$TrialDaysStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="b6b8fb40"><classId hash="279302512"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest$ImageSourceStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="f8328945"><classId hash="4164061509"><name><name>com/shopify/client/model/ShopifyOrderRoot</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="3ff8af1a"><classId hash="841333360"><name><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$NameStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="71600048"><classId hash="1902116936"><name><name>com/shopify/client/impl/ShopifyClientImplTest</name></name></classId></id><coverageId>71600048</coverageId></classHistory>
<classHistory><id hierarchicalHash="128d38c8a"><classId hash="1925034719"><name><name>com/shopify/client/model/ShopifyVariantCreationRequest$TaxableStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1f219eb0"><classId hash="522297008"><name><name>com/channelape/shopify/business/service/factories/ShopifyClientFactoryTest</name></name></classId></id><coverageId>1f219eb0</coverageId></classHistory>
<classHistory><id hierarchicalHash="b41055b0"><classId hash="3020969392"><name><name>com/shopify/client/model/ShopifyProductCreationRequestTest</name></name></classId></id><coverageId>b41055b0</coverageId></classHistory>
<classHistory><id hierarchicalHash="13ea6aca5"><classId hash="3183392564"><name><name>com/shopify/client/model/ShopifyProductCreationRequest$BodyHtmlStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="bffc71ff"><classId hash="1598902290"><name><name>com/shopify/client/model/ShopifyProductUpdateRequest$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="91979833"><classId hash="2442631219"><name><name>com/channelape/shopify/business/model/AccessToken</name></name></classId></id><coverageId>32165bf9</coverageId></classHistory>
<classHistory><id hierarchicalHash="17f2e8e2a"><classId hash="4149848442"><name><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest$NamespaceStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="173a29b74"><classId hash="3956127428"><name><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest$ValueTypeStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1fd24303"><classId hash="533873411"><name><name>com/shopify/client/model/adapters/InventoryManagementAdapter</name></name></classId></id><coverageId>13256b11a</coverageId></classHistory>
<classHistory><id hierarchicalHash="da302626"><classId hash="2038498361"><name><name>com/shopify/client/model/ShopifyProductUpdateRequest$ImageSourcesStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1540d6a48"><classId hash="2918858872"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></name></classId></id><coverageId>ab6b992b</coverageId></classHistory>
<classHistory><id hierarchicalHash="d17ab6fa"><classId hash="3514480378"><name><name>com/shopify/client/model/ShopifyProductTest</name></name></classId></id><coverageId>d17ab6fa</coverageId></classHistory>
<classHistory><id hierarchicalHash="461ee05"><classId hash="73526789"><name><name>com/shopify/client/model/ShopifyProductsRoot</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="175c3de6c"><classId hash="3484464284"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest$BarcodeStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="6b7385fa"><classId hash="1802733050"><name><name>com/shopify/client/model/MetafieldRoot</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="9f0caa80"><classId hash="505722127"><name><name>com/shopify/client/model/ShopifyProductCreationRequest$MetafieldsGlobalDescriptionTagStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="ae8ccdd3"><classId hash="1306373094"><name><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></name></classId></id><coverageId>1843a541</coverageId></classHistory>
<classHistory><id hierarchicalHash="f3aaf217"><classId hash="4088066583"><name><name>com/shopify/client/model/ShopifyVariantCreationRequestTest</name></name></classId></id><coverageId>f3aaf217</coverageId></classHistory>
<classHistory><id hierarchicalHash="b7d23179"><classId hash="237939780"><name><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$LocationIdStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="60c33fe5"><classId hash="1623408613"><name><name>com/shopify/client/model/ShopifyCustomer</name></name></classId></id><coverageId>80a3b3ad</coverageId></classHistory>
<classHistory><id hierarchicalHash="108725e1b"><classId hash="4204751217"><name><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="bc573d51"><classId hash="3159833937"><name><name>com/shopify/client/model/adapters/MetafieldValueTypeAdapter</name></name></classId></id><coverageId>8c15ac51</coverageId></classHistory>
<classHistory><id hierarchicalHash="e3eb832b"><classId hash="3823862571"><name><name>com/shopify/client/model/adapters/InventoryQuantityAdapterTest</name></name></classId></id><coverageId>e3eb832b</coverageId></classHistory>
<classHistory><id hierarchicalHash="9aa908b4"><classId hash="2594769076"><name><name>com/shopify/client/model/ShopifyLineItem</name></name></classId></id><coverageId>23c5a0c17</coverageId></classHistory>
<classHistory><id hierarchicalHash="ef7c8980"><classId hash="1855230991"><name><name>com/shopify/client/model/ShopifyProductCreationRequest$PublishedStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="ca91b809"><classId hash="343662174"><name><name>com/shopify/client/model/ShopifyVariantCreationRequest$FulfillmentServiceStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="d8340e18"><classId hash="3627290136"><name><name>com/shopify/client/model/ShopifyRecurringApplicationChargeRoot</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="bd8c4c4b"><classId hash="125203104"><name><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></name></classId></id><coverageId>254e0b4db</coverageId></classHistory>
<classHistory><id hierarchicalHash="2d04e5dc"><classId hash="755295708"><name><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest</name></name></classId></id><coverageId>bb52dff2</coverageId></classHistory>
<classHistory><id hierarchicalHash="98e19d2a"><classId hash="2332993664"><name><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$Steps</name></name></classId></id><coverageId>9e4598bc</coverageId></classHistory>
<classHistory><id hierarchicalHash="93bf0ca4"><classId hash="2478771364"><name><name>com/shopify/client/model/ShopifyInventoryLevel</name></name></classId></id><coverageId>1a17e8e0e</coverageId></classHistory>
<classHistory><id hierarchicalHash="72519704"><classId hash="1917949700"><name><name>com/shopify/client/model/ShopifyCancelOrderRequest</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="80e7f571"><classId hash="2162685297"><name><name>com/shopify/client/model/ShopifyProductCreationRequest</name></name></classId></id><coverageId>cc53faf1</coverageId></classHistory>
<classHistory><id hierarchicalHash="156d8896e"><classId hash="3473122494"><name><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest$KeyStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="b8adf06d"><classId hash="1476316800"><name><name>com/shopify/client/model/ShopifyProductUpdateRequest$TitleStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="e87b5873"><classId hash="1457766464"><name><name>com/channelape/shopify/business/model/AccessToken$TokenStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="5c95be6a"><classId hash="1553317482"><name><name>com/shopify/client/model/ShopifyTaxLine</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="706fadd7"><classId hash="1886367191"><name><name>com/shopify/client/model/ShopifyLocation</name></name></classId></id><coverageId>71600048</coverageId></classHistory>
<classHistory><id hierarchicalHash="63f8bb66"><classId hash="1677245286"><name><name>com/shopify/client/model/ShopifyErrorsRoot</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="14717ea10"><classId hash="2701443136"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest$InventoryItemIdStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="18d316ec2"><classId hash="3608909079"><name><name>com/shopify/client/model/ShopifyVariantCreationRequest$SkuStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="d3642b2c"><classId hash="3546557228"><name><name>com/shopify/client/model/adapters/DateTimeAdapter</name></name></classId></id><coverageId>13c15f1cd</coverageId></classHistory>
<classHistory><id hierarchicalHash="f9ddb073"><classId hash="3960126409"><name><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$TermsStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="e8cc9fb8"><classId hash="850839053"><name><name>com/shopify/client/model/ShopifyVariantCreationRequest$ThirdOptionStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="7e89924a"><classId hash="1367649390"><name><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest$ValueStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="c5a3381c"><classId hash="2096437470"><name><name>com/shopify/client/model/ShopifyProduct$1</name></name></classId></id><coverageId>e9be5c3b</coverageId></classHistory>
<classHistory><id hierarchicalHash="fd767f21"><classId hash="4020472439"><name><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$BuildStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="129f919d4"><classId hash="3377068007"><name><name>com/shopify/client/model/ShopifyProductUpdateRequest$SortedOptionNamesStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="11b43c3f4"><classId hash="1697507913"><name><name>com/shopify/client/model/ShopifyVariantCreationRequest$InventoryManagementStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="22fd47ea"><classId hash="587024362"><name><name>com/shopify/client/model/ShopifyVariantRequestPositionComparator</name></name></classId></id><coverageId>1843a541</coverageId></classHistory>
<classHistory><id hierarchicalHash="15459f54e"><classId hash="3267517723"><name><name>com/channelape/shopify/business/model/AccessToken$BuildStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="124492ce7"><classId hash="2057676722"><name><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$NotifyCustomerStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="9d7e2c96"><classId hash="199660643"><name><name>com/channelape/shopify/business/model/AccessToken$ErrorCodesStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="d8c43f1b"><classId hash="1369223402"><name><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$TrackingCompanyStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="efbb79be"><classId hash="1235767278"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="39c056e"><classId hash="60556654"><name><name>com/shopify/rest/model/ShopifyCredentialTest</name></name></classId></id><coverageId>39c056e</coverageId></classHistory>
<classHistory><id hierarchicalHash="31d2ba51"><classId hash="603964839"><name><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$ReturnUrlStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="df5955a"><classId hash="234198362"><name><name>com/shopify/client/model/ShopifyVariantRequestOption1Comparator</name></name></classId></id><coverageId>13f6dcf22</coverageId></classHistory>
<classHistory><id hierarchicalHash="8c15ac51"><classId hash="2350230609"><name><name>com/shopify/client/model/adapters/MetafieldValueTypeAdapterTest</name></name></classId></id><coverageId>8c15ac51</coverageId></classHistory>
<classHistory><id hierarchicalHash="17ca62c15"><classId hash="3331347050"><name><name>com/shopify/client/model/ShopifyVariantCreationRequest$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="cab5f185"><classId hash="3400921477"><name><name>com/shopify/client/model/adapters/DateTimeAdapterTest</name></name></classId></id><coverageId>cab5f185</coverageId></classHistory>
<classHistory><id hierarchicalHash="54cc9cdc"><classId hash="667399936"><name><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest$ValueTypeStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="50070778"><classId hash="1342637944"><name><name>com/shopify/client/model/ShopifyShippingLine</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="f930e9a2"><classId hash="1394458578"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest$WeightStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="12716e121"><classId hash="3328687924"><name><name>com/shopify/client/model/ShopifyProductUpdateRequest$ProductTypeStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="12616ff1d"><classId hash="3311918384"><name><name>com/shopify/client/model/ShopifyProductUpdateRequest$BodyHtmlStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="2153036d"><classId hash="559088493"><name><name>com/shopify/client/ShopifyClient</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="5e25f42b"><classId hash="1579545643"><name><name>com/shopify/client/model/adapters/EscapedStringsAdapterTest</name></name></classId></id><coverageId>5e25f42b</coverageId></classHistory>
<classHistory><id hierarchicalHash="c9f2269b"><classId hash="3388090011"><name><name>com/shopify/client/model/adapters/TagsAdapterTest</name></name></classId></id><coverageId>c9f2269b</coverageId></classHistory>
<classHistory><id hierarchicalHash="b615d9ab"><classId hash="3054885291"><name><name>com/shopify/client/model/ShopifyVariantCreationRequest</name></name></classId></id><coverageId>254e0b4db</coverageId></classHistory>
<classHistory><id hierarchicalHash="a04ec1e8"><classId hash="2689516008"><name><name>com/shopify/client/model/OrderRiskRecommendation</name></name></classId></id><coverageId>f2899ec7</coverageId></classHistory>
<classHistory><id hierarchicalHash="1fb9f3f2"><classId hash="532280306"><name><name>com/shopify/client/model/ShopifyRecurringApplicationCharge</name></name></classId></id><coverageId>9e4598bc</coverageId></classHistory>
<classHistory><id hierarchicalHash="127d45bae"><classId hash="2695679357"><name><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$TrackingUrlsStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="f43b365"><classId hash="256095077"><name><name>com/shopify/client/model/ShopifyOrderTest</name></name></classId></id><coverageId>f43b365</coverageId></classHistory>
<classHistory><id hierarchicalHash="cf7b0a6a"><classId hash="694673562"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest$InventoryPolicyStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="b4cf9885"><classId hash="3033503877"><name><name>com/shopify/client/model/ShopifyAttribute</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="b3594326"><classId hash="2253675850"><name><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="42b570f9"><classId hash="1119187193"><name><name>com/channelape/shopify/business/client/ShopifyAccessTokenClient</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="7190bf4c"><classId hash="1673382562"><name><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$CappedAmountStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="6da72365"><classId hash="217579896"><name><name>com/shopify/client/model/ShopifyProductUpdateRequest$VariantUpdateRequestsStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="13fdb4379"><classId hash="2520235588"><name><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$Steps</name></name></classId></id><coverageId>e79e506a</coverageId></classHistory>
<classHistory><id hierarchicalHash="fcf4726a"><classId hash="1188993215"><name><name>com/shopify/client/model/ShopifyVariantCreationRequest$BarcodeStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="15a2b5386"><classId hash="3540239701"><name><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$Steps</name></name></classId></id><coverageId>e35bbb65</coverageId></classHistory>
<classHistory><id hierarchicalHash="15765c07f"><classId hash="2706368212"><name><name>com/shopify/client/model/ShopifyVariantCreationRequest$InventoryPolicyStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1a165c0d7"><classId hash="4216493831"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest$AvailableStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="f09eb961"><classId hash="2685432003"><name><name>com/shopify/client/model/ImageAltTextCreationRequest$BuildStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="7c749762"><classId hash="2088015714"><name><name>com/shopify/client/model/InventoryPolicy</name></name></classId></id><coverageId>e7749dbd</coverageId></classHistory>
<classHistory><id hierarchicalHash="87278e31"><classId hash="2267516465"><name><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest</name></name></classId></id><coverageId>e35bbb65</coverageId></classHistory>
<classHistory><id hierarchicalHash="134de9e95"><classId hash="2127086826"><name><name>com/shopify/client/model/ShopifyVariantCreationRequest$CompareAtPriceStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="b76bb819"><classId hash="3077290009"><name><name>com/shopify/client/model/adapters/CurrencyAdapterTest</name></name></classId></id><coverageId>b76bb819</coverageId></classHistory>
<classHistory><id hierarchicalHash="9c20abe9"><classId hash="2619386857"><name><name>com/shopify/client/model/ShopifyVariantRoot</name></name></classId></id><coverageId>71600048</coverageId></classHistory>
<classHistory><id hierarchicalHash="8e3d8862"><classId hash="2386397282"><name><name>com/channelape/shopify/business/service/factories/ShopifyClientFactory</name></name></classId></id><coverageId>1f219eb0</coverageId></classHistory>
<classHistory><id hierarchicalHash="18044a1f4"><classId hash="3392063561"><name><name>com/shopify/client/model/ShopifyVariantCreationRequest$FirstOptionStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="ad54e44f"><classId hash="2908021839"><name><name>com/channelape/shopify/business/client/impl/ShopifyAccessTokenClientImpl</name></name></classId></id><coverageId>32165bf9</coverageId></classHistory>
<classHistory><id hierarchicalHash="87d4e4b0"><classId hash="2278876336"><name><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest</name></name></classId></id><coverageId>6c41deba</coverageId></classHistory>
<classHistory><id hierarchicalHash="e79e506a"><classId hash="3885912170"><name><name>com/shopify/client/model/ShopifyFulfillmentCreationRequestTest</name></name></classId></id><coverageId>e79e506a</coverageId></classHistory>
<classHistory><id hierarchicalHash="5fe08f92"><classId hash="853256630"><name><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest$NamespaceStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="98c3a385"><classId hash="2562958213"><name><name>com/shopify/client/exceptions/ShopifyErrorResponseExceptionTest</name></name></classId></id><coverageId>98c3a385</coverageId></classHistory>
<classHistory><id hierarchicalHash="ac2899da"><classId hash="2888341978"><name><name>com/shopify/client/model/Option</name></name></classId></id><coverageId>19dceb1eb</coverageId></classHistory>
<classHistory><id hierarchicalHash="7192ac55"><classId hash="1905437781"><name><name>com/shopify/client/model/ShopifyProductRoot</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="141d73983"><classId hash="2553525326"><name><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$TrackingNumberStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="48ae1f3e"><classId hash="1219370814"><name><name>com/shopify/client/model/ShopifyProduct</name></name></classId></id><coverageId>19dceb1eb</coverageId></classHistory>
<classHistory><id hierarchicalHash="ae61cf9e"><classId hash="762960429"><name><name>com/shopify/client/model/ShopifyProductCreationRequest$SortedOptionNamesStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="ede7ad34"><classId hash="936498057"><name><name>com/shopify/client/model/ShopifyVariantCreationRequest$ImageSourceStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="afa3e09c"><classId hash="1595250686"><name><name>com/shopify/client/model/ImageAltTextCreationRequest$ImageAltTextStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8aa6fa89"><classId hash="704108700"><name><name>com/shopify/client/model/ShopifyProductUpdateRequest$MetafieldsGlobalTitleTagStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="a44e59eb"><classId hash="2756598251"><name><name>com/shopify/client/model/adapters/EscapedStringsAdapter</name></name></classId></id><coverageId>5e25f42b</coverageId></classHistory>
<classHistory><id hierarchicalHash="78245667"><classId hash="2015647335"><name><name>com/shopify/client/model/ShopifyVariantRequest</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="b60a570e"><classId hash="3054130958"><name><name>com/shopify/client/exceptions/ShopifyErrorResponseException</name></name></classId></id><coverageId>10a23a3cd</coverageId></classHistory>
<classHistory><id hierarchicalHash="ad499547"><classId hash="628404375"><name><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest$VariantIdStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="a79723f2"><classId hash="369068991"><name><name>com/channelape/shopify/business/model/AccessToken$StateStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="f551909e"><classId hash="1953078061"><name><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></name></classId></id><coverageId>cc53faf1</coverageId></classHistory>
<classHistory><id hierarchicalHash="254d09ca"><classId hash="625805770"><name><name>com/shopify/client/model/Metafield</name></name></classId></id><coverageId>25897db96</coverageId></classHistory>
<classHistory><id hierarchicalHash="d6e3ee68"><classId hash="3605261928"><name><name>com/shopify/client/model/ShopifyOrderRisksRoot</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="bd1cf51b"><classId hash="386517835"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest$FirstOptionStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="15acbd98c"><classId hash="3032002492"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest$SkuStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="81385a70"><classId hash="2167954032"><name><name>com/shopify/client/model/adapters/EscapedStringAdapterTest</name></name></classId></id><coverageId>81385a70</coverageId></classHistory>
<classHistory><id hierarchicalHash="6bf9a243"><classId hash="1811522115"><name><name>com/shopify/client/model/InventoryManagement</name></name></classId></id><coverageId>13256b11a</coverageId></classHistory>
<classHistory><id hierarchicalHash="49700313"><classId hash="864718663"><name><name>com/shopify/client/impl/ShopifyClientImpl$1</name></name></classId></id><coverageId>71600048</coverageId></classHistory>
<classHistory><id hierarchicalHash="ac15a9fb"><classId hash="2887100923"><name><name>com/shopify/client/model/ShopifyErrors</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="508e489e"><classId hash="1351501982"><name><name>com/shopify/client/model/ImageAltTextCreationRequest</name></name></classId></id><coverageId>131031cea</coverageId></classHistory>
<classHistory><id hierarchicalHash="1155ce20f"><classId hash="2490690718"><name><name>com/shopify/client/model/ShopifyProductCreationRequest$VariantCreationRequestsStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="64af21f9"><classId hash="1689199097"><name><name>com/shopify/client/model/ImageAltTextCreationRequestTest</name></name></classId></id><coverageId>64af21f9</coverageId></classHistory>
<classHistory><id hierarchicalHash="f54b58f1"><classId hash="4115355889"><name><name>com/shopify/client/model/ShopifyProductRequest</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="2c60e5e6"><classId hash="744547814"><name><name>com/shopify/client/model/ShopifyOrdersRoot</name></name></classId></id><coverageId>71600048</coverageId></classHistory>
<classHistory><id hierarchicalHash="32165bf9"><classId hash="840326137"><name><name>com/channelape/shopify/business/client/impl/ShopifyAccessTokenClientImplTest</name></name></classId></id><coverageId>32165bf9</coverageId></classHistory>
<classHistory><id hierarchicalHash="c93c3651"><classId hash="1108650016"><name><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$LocationIdStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1375de705"><classId hash="2437594421"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest$TaxableStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="6e9543f9"><classId hash="1395399516"><name><name>com/shopify/client/model/ShopifyFulfillment$Status</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="24af19e9"><classId hash="615455209"><name><name>com/shopify/client/model/ShopifyAddress</name></name></classId></id><coverageId>80a3b3ad</coverageId></classHistory>
<classHistory><id hierarchicalHash="985a9ffa"><classId hash="2556076026"><name><name>com/shopify/client/exceptions/ShopifyClientException</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="de28fd68"><classId hash="1459711799"><name><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$BuildStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="115743038"><classId hash="3303401370"><name><name>com/shopify/client/model/ImageAltTextCreationRequest$Steps</name></name></classId></id><coverageId>131031cea</coverageId></classHistory>
<classHistory><id hierarchicalHash="f315ba00"><classId hash="3846358358"><name><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$PriceStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1571e8a90"><classId hash="4134496419"><name><name>com/shopify/client/model/ShopifyProductUpdateRequest$BuildStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="ec8fe332"><classId hash="1701336321"><name><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="f56c41d6"><classId hash="1838636326"><name><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="be0d96d3"><classId hash="2433265911"><name><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest$ProductIdStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="9e4598bc"><classId hash="2655361212"><name><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequestTest</name></name></classId></id><coverageId>9e4598bc</coverageId></classHistory>
<classHistory><id hierarchicalHash="d488ec2d"><classId hash="779469405"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest$CompareAtPriceStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="15bf6f7bc"><classId hash="2991813255"><name><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$BuildStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="a2fcde51"><classId hash="291849758"><name><name>com/channelape/shopify/business/model/AccessToken$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="c1d7f126"><classId hash="3252154662"><name><name>com/shopify/client/model/ShopifyLocationsRoot</name></name></classId></id><coverageId>71600048</coverageId></classHistory>
<classHistory><id hierarchicalHash="e49b3ba0"><classId hash="3835378592"><name><name>com/shopify/client/model/ShopifyVariant</name></name></classId></id><coverageId>2c640b523</coverageId></classHistory>
<classHistory><id hierarchicalHash="160240ddf"><classId hash="3121669135"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest$InventoryManagementStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="35c2722b"><classId hash="901935659"><name><name>com/shopify/client/model/ShopifyInventoryLevelRootTest</name></name></classId></id><coverageId>35c2722b</coverageId></classHistory>
<classHistory><id hierarchicalHash="fdf55ec3"><classId hash="1981839891"><name><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest$BuildStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="15dad47ff"><classId hash="3703919246"><name><name>com/shopify/client/model/ShopifyProductCreationRequest$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1341ba1c0"><classId hash="2114308117"><name><name>com/shopify/client/model/ShopifyVariantCreationRequest$SecondOptionStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="13fcdc718"><classId hash="3202732455"><name><name>com/shopify/client/model/ShopifyProductCreationRequest$TagsStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="537a2a4b"><classId hash="1400515147"><name><name>com/shopify/rest/model/ShopifyCredential</name></name></classId></id><coverageId>22bda41e</coverageId></classHistory>
<classHistory><id hierarchicalHash="141eb80e3"><classId hash="2346035000"><name><name>com/shopify/client/model/ShopifyVariantCreationRequest$PriceStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="2db02c83"><classId hash="766520451"><name><name>com/shopify/client/model/adapters/CurrencyAdapter</name></name></classId></id><coverageId>128cbb861</coverageId></classHistory>
<classHistory><id hierarchicalHash="183ff6525"><classId hash="3663454192"><name><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$LineItemsStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="80676a50"><classId hash="2154261072"><name><name>com/shopify/client/model/Count</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="99dffc41"><classId hash="959502932"><name><name>com/shopify/client/model/ShopifyProductUpdateRequest$MetafieldsGlobalDescriptionTagStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="c0f6b0d2"><classId hash="3237392594"><name><name>com/shopify/client/model/adapters/InventoryManagementAdapterTest</name></name></classId></id><coverageId>c0f6b0d2</coverageId></classHistory>
<classHistory><id hierarchicalHash="60af21ed"><classId hash="1622090221"><name><name>com/shopify/client/model/ShopifyProductUpdateRequest</name></name></classId></id><coverageId>1843a541</coverageId></classHistory>
<classHistory><id hierarchicalHash="10bbfa216"><classId hash="2049444323"><name><name>com/channelape/shopify/business/model/AccessToken$Steps</name></name></classId></id><coverageId>32165bf9</coverageId></classHistory>
<classHistory><id hierarchicalHash="e35bbb65"><classId hash="3814439781"><name><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequestTest</name></name></classId></id><coverageId>e35bbb65</coverageId></classHistory>
<classHistory><id hierarchicalHash="7319d431"><classId hash="1931072561"><name><name>com/shopify/client/model/ShopifyVariantRequestOption1ComparatorTest</name></name></classId></id><coverageId>7319d431</coverageId></classHistory>
<classHistory><id hierarchicalHash="fc971db2"><classId hash="4237761970"><name><name>com/shopify/client/model/FulfillmentService</name></name></classId></id><coverageId>1c9833b69</coverageId></classHistory>
<classHistory><id hierarchicalHash="f9d1c795"><classId hash="4191274901"><name><name>com/shopify/client/model/MetafieldsRoot</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1286097d8"><classId hash="3620884282"><name><name>com/shopify/client/model/ImageAltTextCreationRequest$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="76149d75"><classId hash="1981062517"><name><name>com/shopify/client/model/adapters/InventoryPolicyAdapterTest</name></name></classId></id><coverageId>76149d75</coverageId></classHistory>
<classHistory><id hierarchicalHash="ab3a57aa"><classId hash="26661493"><name><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$TrackingUrlsStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="169f3e929"><classId hash="3286286169"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest$RequiresShippingStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="dd76a8cf"><classId hash="3483612197"><name><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$TestStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1b69289d"><classId hash="459876509"><name><name>com/shopify/client/model/ShopifyFulfillment</name></name></classId></id><coverageId>23c5a0c17</coverageId></classHistory>
<classHistory><id hierarchicalHash="eac08574"><classId hash="3938485620"><name><name>com/shopify/client/model/Shop</name></name></classId></id><coverageId>1f219eb0</coverageId></classHistory>
<classHistory><id hierarchicalHash="9d9e90e2"><classId hash="365538354"><name><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest$ValueStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="4490039c"><classId hash="1150288796"><name><name>com/shopify/client/model/ShopifyInventoryLevelRoot</name></name></classId></id><coverageId>a7227273</coverageId></classHistory>
<classHistory><id hierarchicalHash="badd9628"><classId hash="972398775"><name><name>com/shopify/client/model/ShopifyProductCreationRequest$ProductTypeStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="11789d0e9"><classId hash="3067784956"><name><name>com/shopify/client/model/ShopifyProductUpdateRequest$CurrentShopifyProductStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1462af53c"><classId hash="2685913964"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest$SecondOptionStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="e51e65ba"><classId hash="3843974586"><name><name>com/shopify/client/model/adapters/TagsAdapter</name></name></classId></id><coverageId>c9f2269b</coverageId></classHistory>
<classHistory><id hierarchicalHash="f4849ead"><classId hash="4102332077"><name><name>com/shopify/client/model/MetafieldValueType</name></name></classId></id><coverageId>f0c4ce4a</coverageId></classHistory>
<classHistory><id hierarchicalHash="aa56dcb2"><classId hash="11753341"><name><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="e1d75830"><classId hash="1521469951"><name><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$CurrentShopifyFulfillmentStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1843a541"><classId hash="407086401"><name><name>com/shopify/client/model/ShopifyProductUpdateRequestTest</name></name></classId></id><coverageId>1843a541</coverageId></classHistory>
<classHistory><id hierarchicalHash="8c3509e"><classId hash="147017886"><name><name>com/shopify/client/model/adapters/OrderRiskRecommendationAdapter</name></name></classId></id><coverageId>f2899ec7</coverageId></classHistory>
<classHistory><id hierarchicalHash="104e53e5b"><classId hash="2109583402"><name><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$TrackingNumberStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="10f53a936"><classId hash="2389423045"><name><name>com/shopify/client/model/ShopifyProductCreationRequest$MetafieldsGlobalTitleTagStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="165d131bf"><classId hash="3735659406"><name><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$NotifyCustomerStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1169fa1a1"><classId hash="2511842352"><name><name>com/shopify/client/model/ShopifyProductCreationRequest$TitleStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="dd2f4aa"><classId hash="231929002"><name><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest</name></name></classId></id><coverageId>9e4598bc</coverageId></classHistory>
<classHistory><id hierarchicalHash="36528ad6"><classId hash="156083450"><name><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest$KeyStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="f0f1b62f"><classId hash="3287076947"><name><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest$Steps</name></name></classId></id><coverageId>bb52dff2</coverageId></classHistory>
<classHistory><id hierarchicalHash="ef28f2d2"><classId hash="1226164482"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest$ThirdOptionStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="e81bd259"><classId hash="2272047212"><name><name>com/shopify/client/model/ShopifyProductUpdateRequest$VendorStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="965f72f"><classId hash="157677359"><name><name>com/shopify/client/model/adapters/InventoryQuantityAdapter</name></name></classId></id><coverageId>1554b8373</coverageId></classHistory>
<classHistory><id hierarchicalHash="f72eb1d8"><classId hash="2524942315"><name><name>com/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="cea13d04"><classId hash="3466673412"><name><name>com/shopify/client/model/adapters/InventoryPolicyAdapter</name></name></classId></id><coverageId>e7749dbd</coverageId></classHistory>
<classHistory><id hierarchicalHash="103549f3e"><classId hash="1295959443"><name><name>com/shopify/client/model/ShopifyVariantCreationRequest$RequiresShippingStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="15b076929"><classId hash="3554663160"><name><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$LineItemsStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="fa5c1b9b"><classId hash="4200340379"><name><name>com/shopify/client/model/ShopifyInventoryLevelTest</name></name></classId></id><coverageId>fa5c1b9b</coverageId></classHistory>
<classHistory><id hierarchicalHash="1ae63456e"><classId hash="4165823427"><name><name>com/shopify/client/model/ShopifyVariantCreationRequest$BuildStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="dafeef35"><classId hash="887866725"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest$PriceStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="bb52dff2"><classId hash="3142770674"><name><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequestTest</name></name></classId></id><coverageId>bb52dff2</coverageId></classHistory>
<classHistory><id hierarchicalHash="11ed23a43"><classId hash="1965995278"><name><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$TrackingCompanyStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="11443120a"><classId hash="3012816925"><name><name>com/shopify/client/model/ShopifyProductUpdateRequest$TagsStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="bf1e01f4"><classId hash="420141092"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest$FulfillmentServiceStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="f2899ec7"><classId hash="4069105351"><name><name>com/shopify/client/model/adapters/OrderRiskRecommendationAdapterTest</name></name></classId></id><coverageId>f2899ec7</coverageId></classHistory>
<classHistory><id hierarchicalHash="14232b3bf"><classId hash="3126710031"><name><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest$Steps</name></name></classId></id><coverageId>6c41deba</coverageId></classHistory>
<classHistory><id hierarchicalHash="a61329d0"><classId hash="2786273744"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest</name></name></classId></id><coverageId>ab6b992b</coverageId></classHistory>
<classHistory><id hierarchicalHash="cbed601f"><classId hash="2666035779"><name><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest$BuildStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="e6d28b12"><classId hash="1709872545"><name><name>com/shopify/client/model/ShopifyProductCreationRequest$VendorStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="6999f1cc"><classId hash="1771696588"><name><name>com/shopify/client/model/adapters/EscapedStringAdapter</name></name></classId></id><coverageId>f2985ab8</coverageId></classHistory>
<classHistory><id hierarchicalHash="178e29243"><classId hash="3536808051"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest$BuildStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="a9a38535"><classId hash="2846065973"><name><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest</name></name></classId></id><coverageId>e79e506a</coverageId></classHistory>
<classHistory><id hierarchicalHash="38149a9a"><classId hash="940874394"><name><name>com/shopify/client/model/ShopifyImageRoot</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="9952a6c1"><classId hash="2572330689"><name><name>com/shopify/rest/model/ShopifyResponse</name></name></classId></id><coverageId>32165bf9</coverageId></classHistory>
<classHistory><id hierarchicalHash="1659de03"><classId hash="374988291"><name><name>com/shopify/client/model/ShopifyOrder</name></name></classId></id><coverageId>80a3b3ad</coverageId></classHistory>
<classHistory><id hierarchicalHash="21c7f3a2"><classId hash="566752162"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequestTest</name></name></classId></id><coverageId>21c7f3a2</coverageId></classHistory>
<classHistory><id hierarchicalHash="6c41deba"><classId hash="1816256186"><name><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequestTest</name></name></classId></id><coverageId>6c41deba</coverageId></classHistory>
<classHistory><id hierarchicalHash="ad9ad833"><classId hash="126332515"><name><name>com/shopify/client/model/ShopifyVariantUpdateRequest$CurrentShopifyVariantStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="af42fcd2"><classId hash="2940402898"><name><name>com/shopify/client/model/Image</name></name></classId></id><coverageId>cc53faf1</coverageId></classHistory>
<classHistory><id hierarchicalHash="159eedbf2"><classId hash="3641108097"><name><name>com/shopify/client/model/ShopifyProductCreationRequest$ImageSourcesStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="d2d37ae6"><classId hash="3537074918"><name><name>com/shopify/client/model/ShopifyProducts</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="2ab4bb22"><classId hash="716487458"><name><name>com/shopify/client/model/ShopifyFulfillmentRoot</name></name></classId></id><coverageId>71600048</coverageId></classHistory>
<result><id><location><clazz><name>com/channelape/shopify/business/client/impl/ShopifyAccessTokenClientImpl</name></clazz><method><name>callShopify</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/channelape/shopify/business/client/impl/ShopifyAccessTokenClientImpl</name></clazz><method><name>generateToken</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lcom/channelape/shopify/business/model/AccessToken;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest.givenValidShopSubdomainAndValidAuthorizationCodeWhenGeneratingAccessTokenThenReturnAccessTokenWithCreatedStateAndCorrectValue(com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/channelape/shopify/business/client/impl/ShopifyAccessTokenClientImpl</name></clazz><method><name>generateToken</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lcom/channelape/shopify/business/model/AccessToken;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest.givenValidShopSubdomainAndValidAuthorizationCodeWhenGeneratingAccessTokenThenReturnAccessTokenWithCreatedStateAndCorrectValue(com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/channelape/shopify/business/client/impl/ShopifyAccessTokenClientImpl</name></clazz><method><name>generateToken</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lcom/channelape/shopify/business/model/AccessToken;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest.givenValidShopSubdomainAndValidAuthorizationCodeWhenGeneratingAccessTokenThenReturnAccessTokenWithCreatedStateAndCorrectValue(com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/channelape/shopify/business/client/impl/ShopifyAccessTokenClientImpl</name></clazz><method><name>generateToken</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lcom/channelape/shopify/business/model/AccessToken;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest.givenInvalidShopSubdomainAndSomeAuthorizationCodeWhenGeneratingAccessTokenThenReturnAccessTokenWithDataNotFoundStateAndCorrectErrorCodes(com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/channelape/shopify/business/client/impl/ShopifyAccessTokenClientImpl</name></clazz><method><name>generateToken</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lcom/channelape/shopify/business/model/AccessToken;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest.givenValidShopSubdomainAndInvalidAuthorizationCodeWhenGeneratingAccessTokenThenReturnAccessTokenWithInvalidDataStateAndCorrectErrorCodes(com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/channelape/shopify/business/client/impl/ShopifyAccessTokenClientImpl</name></clazz><method><name>generateToken</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lcom/channelape/shopify/business/model/AccessToken;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest.givenValidShopSubdomainAndValidAuthorizationCodeWhenGeneratingAccessTokenThenReturnAccessTokenWithCreatedStateAndCorrectValue(com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/channelape/shopify/business/model/AccessToken</name></clazz><method><name>getErrorCodes</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest.givenValidShopSubdomainAndValidAuthorizationCodeWhenGeneratingAccessTokenThenReturnAccessTokenWithCreatedStateAndCorrectValue(com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/channelape/shopify/business/model/AccessToken</name></clazz><method><name>getState</name></method><methodDesc>()Lcom/channelape/business/model/State;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest.givenValidShopSubdomainAndValidAuthorizationCodeWhenGeneratingAccessTokenThenReturnAccessTokenWithCreatedStateAndCorrectValue(com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/channelape/shopify/business/model/AccessToken</name></clazz><method><name>getToken</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest.givenValidShopSubdomainAndValidAuthorizationCodeWhenGeneratingAccessTokenThenReturnAccessTokenWithCreatedStateAndCorrectValue(com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/channelape/shopify/business/model/AccessToken</name></clazz><method><name>newBuilder</name></method><methodDesc>()Lcom/channelape/shopify/business/model/AccessToken$TokenStep;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest.givenValidShopSubdomainAndValidAuthorizationCodeWhenGeneratingAccessTokenThenReturnAccessTokenWithCreatedStateAndCorrectValue(com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/channelape/shopify/business/model/AccessToken$Steps</name></clazz><method><name>build</name></method><methodDesc>()Lcom/channelape/shopify/business/model/AccessToken;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/channelape/shopify/business/model/AccessToken$Steps</name></clazz><method><name>noToken</name></method><methodDesc>()Lcom/channelape/shopify/business/model/AccessToken$ErrorCodesStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/channelape/shopify/business/model/AccessToken$Steps</name></clazz><method><name>withErrorCodes</name></method><methodDesc>([Lcom/channelape/business/error/ErrorCode;)Lcom/channelape/shopify/business/model/AccessToken$StateStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest.givenValidShopSubdomainAndInvalidAuthorizationCodeWhenGeneratingAccessTokenThenReturnAccessTokenWithInvalidDataStateAndCorrectErrorCodes(com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/channelape/shopify/business/model/AccessToken$Steps</name></clazz><method><name>withState</name></method><methodDesc>(Lcom/channelape/business/model/State;)Lcom/channelape/shopify/business/model/AccessToken$BuildStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/channelape/shopify/business/model/AccessToken$Steps</name></clazz><method><name>withToken</name></method><methodDesc>(Ljava/lang/String;)Lcom/channelape/shopify/business/model/AccessToken$BuildStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest.givenValidShopSubdomainAndValidAuthorizationCodeWhenGeneratingAccessTokenThenReturnAccessTokenWithCreatedStateAndCorrectValue(com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/channelape/shopify/business/service/factories/ShopifyClientFactory</name></clazz><method><name>generateClient</name></method><methodDesc>(Ljava/util/Map;)Lcom/shopify/client/ShopifyClient;</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.channelape.shopify.business.service.factories.ShopifyClientFactoryTest.givenSomeCredentialsWithShopSubdomainAndAccessTokenWhenGeneratingClientThenReturnShopifyClient(com.channelape.shopify.business.service.factories.ShopifyClientFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/exceptions/ShopifyErrorResponseException</name></clazz><method><name>buildMessage</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.exceptions.ShopifyErrorResponseExceptionTest.givenResponseWith422StatusCodeAndSomeResponseBodyAndSomeResponsHeadersWhenCreatingShopifyErroResponseExceptionThenCreateExceptionWithExpectedMessageAndException(com.shopify.client.exceptions.ShopifyErrorResponseExceptionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/FulfillmentService</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Image</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenNoNewValuesSetAndPublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Image</name></clazz><method><name>getMetafields</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Image</name></clazz><method><name>getPosition</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Image</name></clazz><method><name>getSource</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ImageAltTextCreationRequest</name></clazz><method><name>newBuilder</name></method><methodDesc>()Lcom/shopify/client/model/ImageAltTextCreationRequest$ImageAltTextStep;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ImageAltTextCreationRequestTest.givenSomeImageAltTextWhenBuildingMetafieldsThenExpectCorrectMetafields(com.shopify.client.model.ImageAltTextCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ImageAltTextCreationRequest$Steps</name></clazz><method><name>build</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ImageAltTextCreationRequestTest.givenSomeImageAltTextWhenBuildingMetafieldsThenExpectCorrectMetafields(com.shopify.client.model.ImageAltTextCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ImageAltTextCreationRequest$Steps</name></clazz><method><name>withImageAltText</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ImageAltTextCreationRequest$BuildStep;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ImageAltTextCreationRequestTest.givenSomeImageAltTextWhenBuildingMetafieldsThenExpectCorrectMetafields(com.shopify.client.model.ImageAltTextCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ImageAltTextCreationRequest$Steps</name></clazz><method><name>withImageAltText</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ImageAltTextCreationRequest$BuildStep;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ImageAltTextCreationRequestTest.givenSomeImageAltTextWhenBuildingMetafieldsThenExpectCorrectMetafields(com.shopify.client.model.ImageAltTextCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ImageAltTextCreationRequest$Steps</name></clazz><method><name>withImageAltText</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ImageAltTextCreationRequest$BuildStep;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ImageAltTextCreationRequestTest.givenSomeImageAltTextWhenBuildingMetafieldsThenExpectCorrectMetafields(com.shopify.client.model.ImageAltTextCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ImageAltTextCreationRequest$Steps</name></clazz><method><name>withImageAltText</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ImageAltTextCreationRequest$BuildStep;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ImageAltTextCreationRequestTest.givenSomeImageAltTextWhenBuildingMetafieldsThenExpectCorrectMetafields(com.shopify.client.model.ImageAltTextCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ImageAltTextCreationRequest$Steps</name></clazz><method><name>withImageAltText</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ImageAltTextCreationRequest$BuildStep;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ImageAltTextCreationRequestTest.givenSomeImageAltTextWhenBuildingMetafieldsThenExpectCorrectMetafields(com.shopify.client.model.ImageAltTextCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/InventoryManagement</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/InventoryManagement;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.InventoryManagementAdapterTest.givenSomeStringWhenUnmarshallingThenReturnInventoryManagement(com.shopify.client.model.adapters.InventoryManagementAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/InventoryManagement</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/InventoryManagement;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.InventoryManagementAdapterTest.givenSomeStringWhenUnmarshallingThenReturnInventoryManagement(com.shopify.client.model.adapters.InventoryManagementAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/InventoryManagement</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/InventoryManagement;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.InventoryManagementAdapterTest.givenSomeStringWhenUnmarshallingThenReturnInventoryManagement(com.shopify.client.model.adapters.InventoryManagementAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/InventoryManagement</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.InventoryManagementAdapterTest.givenSomeStringWhenUnmarshallingThenReturnInventoryManagement(com.shopify.client.model.adapters.InventoryManagementAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/InventoryPolicy</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/InventoryPolicy;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.InventoryPolicyAdapterTest.givenSomeStringWhenUnmarshallingThenReturnInventoryPolicy(com.shopify.client.model.adapters.InventoryPolicyAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/InventoryPolicy</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/InventoryPolicy;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.InventoryPolicyAdapterTest.givenSomeStringWhenUnmarshallingThenReturnInventoryPolicy(com.shopify.client.model.adapters.InventoryPolicyAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/InventoryPolicy</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/InventoryPolicy;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.InventoryPolicyAdapterTest.givenSomeStringWhenUnmarshallingThenReturnInventoryPolicy(com.shopify.client.model.adapters.InventoryPolicyAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/InventoryPolicy</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.InventoryPolicyAdapterTest.givenSomeStringWhenUnmarshallingThenReturnInventoryPolicy(com.shopify.client.model.adapters.InventoryPolicyAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Metafield</name></clazz><method><name>getKey</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ImageAltTextCreationRequestTest.givenSomeImageAltTextWhenBuildingMetafieldsThenExpectCorrectMetafields(com.shopify.client.model.ImageAltTextCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Metafield</name></clazz><method><name>getNamespace</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ImageAltTextCreationRequestTest.givenSomeImageAltTextWhenBuildingMetafieldsThenExpectCorrectMetafields(com.shopify.client.model.ImageAltTextCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Metafield</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ImageAltTextCreationRequestTest.givenSomeImageAltTextWhenBuildingMetafieldsThenExpectCorrectMetafields(com.shopify.client.model.ImageAltTextCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Metafield</name></clazz><method><name>getValueType</name></method><methodDesc>()Lcom/shopify/client/model/MetafieldValueType;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ImageAltTextCreationRequestTest.givenSomeImageAltTextWhenBuildingMetafieldsThenExpectCorrectMetafields(com.shopify.client.model.ImageAltTextCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/MetafieldValueType</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/MetafieldValueType;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.MetafieldValueTypeAdapterTest.givenSomeStringWhenUnmarshallingThenReturnMetafieldValueType(com.shopify.client.model.adapters.MetafieldValueTypeAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/MetafieldValueType</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/MetafieldValueType;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.MetafieldValueTypeAdapterTest.givenSomeStringWhenUnmarshallingThenReturnMetafieldValueType(com.shopify.client.model.adapters.MetafieldValueTypeAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/MetafieldValueType</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/MetafieldValueType;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.MetafieldValueTypeAdapterTest.givenSomeStringWhenUnmarshallingThenReturnMetafieldValueType(com.shopify.client.model.adapters.MetafieldValueTypeAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/MetafieldValueType</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.MetafieldValueTypeAdapterTest.givenSomeStringWhenUnmarshallingThenReturnMetafieldValueType(com.shopify.client.model.adapters.MetafieldValueTypeAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Option</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductTest.givenSomeUnsortedOptionsWhenRetrievingSortedOptionNamesThenReturnSortedOptionNamesList(com.shopify.client.model.ShopifyProductTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Option</name></clazz><method><name>getPosition</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductTest.givenSomeUnsortedOptionsWhenRetrievingSortedOptionNamesThenReturnSortedOptionNamesList(com.shopify.client.model.ShopifyProductTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/OrderRiskRecommendation</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/OrderRiskRecommendation;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.OrderRiskRecommendationAdapterTest.givenAcceptStringWhenUnmarshallingThenReturnOrderRiskRecommendation(com.shopify.client.model.adapters.OrderRiskRecommendationAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/OrderRiskRecommendation</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/OrderRiskRecommendation;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.OrderRiskRecommendationAdapterTest.givenInvestigateStringWhenUnmarshallingThenReturnOrderRiskRecommendation(com.shopify.client.model.adapters.OrderRiskRecommendationAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/OrderRiskRecommendation</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/OrderRiskRecommendation;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.OrderRiskRecommendationAdapterTest.givenCancelStringWhenUnmarshallingThenReturnOrderRiskRecommendation(com.shopify.client.model.adapters.OrderRiskRecommendationAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/OrderRiskRecommendation</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/OrderRiskRecommendation;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.OrderRiskRecommendationAdapterTest.givenAcceptStringWhenUnmarshallingThenReturnOrderRiskRecommendation(com.shopify.client.model.adapters.OrderRiskRecommendationAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/OrderRiskRecommendation</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/OrderRiskRecommendation;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.OrderRiskRecommendationAdapterTest.givenInvestigateStringWhenUnmarshallingThenReturnOrderRiskRecommendation(com.shopify.client.model.adapters.OrderRiskRecommendationAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/OrderRiskRecommendation</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/OrderRiskRecommendation;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.OrderRiskRecommendationAdapterTest.givenCancelStringWhenUnmarshallingThenReturnOrderRiskRecommendation(com.shopify.client.model.adapters.OrderRiskRecommendationAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/OrderRiskRecommendation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.OrderRiskRecommendationAdapterTest.givenAcceptStringWhenUnmarshallingThenReturnOrderRiskRecommendation(com.shopify.client.model.adapters.OrderRiskRecommendationAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Shop</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Shop</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment</name></clazz><method><name>getLineItems</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment</name></clazz><method><name>getLocationId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment</name></clazz><method><name>getOrderId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment</name></clazz><method><name>getTrackingCompany</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment</name></clazz><method><name>getTrackingNumber</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment</name></clazz><method><name>getTrackingUrls</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment</name></clazz><method><name>isNotifyCustomer</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest</name></clazz><method><name>getRequest</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyFulfillment;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest</name></clazz><method><name>newBuilder</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyFulfillmentCreationRequest$OrderIdStep;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$Steps</name></clazz><method><name>build</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyFulfillmentCreationRequest;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$Steps</name></clazz><method><name>withLineItems</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyFulfillmentCreationRequest$LocationIdStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$Steps</name></clazz><method><name>withLineItems</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyFulfillmentCreationRequest$LocationIdStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$Steps</name></clazz><method><name>withLocationId</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillmentCreationRequest$TrackingUrlsStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$Steps</name></clazz><method><name>withLocationId</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillmentCreationRequest$TrackingUrlsStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$Steps</name></clazz><method><name>withNotifyCustomer</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyFulfillmentCreationRequest$LineItemsStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$Steps</name></clazz><method><name>withNotifyCustomer</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyFulfillmentCreationRequest$LineItemsStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$Steps</name></clazz><method><name>withOrderId</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillmentCreationRequest$TrackingCompanyStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$Steps</name></clazz><method><name>withOrderId</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillmentCreationRequest$TrackingCompanyStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$Steps</name></clazz><method><name>withTrackingCompany</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillmentCreationRequest$TrackingNumberStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$Steps</name></clazz><method><name>withTrackingCompany</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillmentCreationRequest$TrackingNumberStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$Steps</name></clazz><method><name>withTrackingNumber</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillmentCreationRequest$NotifyCustomerStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$Steps</name></clazz><method><name>withTrackingNumber</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillmentCreationRequest$NotifyCustomerStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$Steps</name></clazz><method><name>withTrackingUrls</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyFulfillmentCreationRequest$BuildStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentCreationRequest$Steps</name></clazz><method><name>withTrackingUrls</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyFulfillmentCreationRequest$BuildStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentCreationRequestTest.givenSomeOrderIdAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenCreatingFulfillmentCreationRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest</name></clazz><method><name>getRequest</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyFulfillment;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest.givenSomeShopifyFulfillmentAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenUpdatingFulfillmentUpdateRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest</name></clazz><method><name>newBuilder</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyFulfillmentUpdateRequest$CurrentShopifyFulfillmentStep;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest.givenSomeShopifyFulfillmentAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenUpdatingFulfillmentUpdateRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$Steps</name></clazz><method><name>build</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyFulfillmentUpdateRequest;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest.givenSomeShopifyFulfillmentAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenUpdatingFulfillmentUpdateRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$Steps</name></clazz><method><name>withCurrentShopifyFulfillment</name></method><methodDesc>(Lcom/shopify/client/model/ShopifyFulfillment;)Lcom/shopify/client/model/ShopifyFulfillmentUpdateRequest$TrackingCompanyStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest.givenSomeShopifyFulfillmentAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenUpdatingFulfillmentUpdateRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$Steps</name></clazz><method><name>withLineItems</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyFulfillmentUpdateRequest$LocationIdStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest.givenSomeShopifyFulfillmentAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenUpdatingFulfillmentUpdateRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$Steps</name></clazz><method><name>withLineItems</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyFulfillmentUpdateRequest$LocationIdStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest.givenSomeShopifyFulfillmentAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenUpdatingFulfillmentUpdateRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$Steps</name></clazz><method><name>withLocationId</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillmentUpdateRequest$TrackingUrlsStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest.givenSomeShopifyFulfillmentAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenUpdatingFulfillmentUpdateRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$Steps</name></clazz><method><name>withLocationId</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillmentUpdateRequest$TrackingUrlsStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest.givenSomeShopifyFulfillmentAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenUpdatingFulfillmentUpdateRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$Steps</name></clazz><method><name>withNotifyCustomer</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyFulfillmentUpdateRequest$LineItemsStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest.givenSomeShopifyFulfillmentAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenUpdatingFulfillmentUpdateRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$Steps</name></clazz><method><name>withNotifyCustomer</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyFulfillmentUpdateRequest$LineItemsStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest.givenSomeShopifyFulfillmentAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenUpdatingFulfillmentUpdateRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$Steps</name></clazz><method><name>withTrackingCompany</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillmentUpdateRequest$TrackingNumberStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest.givenSomeShopifyFulfillmentAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenUpdatingFulfillmentUpdateRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$Steps</name></clazz><method><name>withTrackingCompany</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillmentUpdateRequest$TrackingNumberStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest.givenSomeShopifyFulfillmentAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenUpdatingFulfillmentUpdateRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$Steps</name></clazz><method><name>withTrackingNumber</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillmentUpdateRequest$NotifyCustomerStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest.givenSomeShopifyFulfillmentAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenUpdatingFulfillmentUpdateRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$Steps</name></clazz><method><name>withTrackingNumber</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillmentUpdateRequest$NotifyCustomerStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest.givenSomeShopifyFulfillmentAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenUpdatingFulfillmentUpdateRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$Steps</name></clazz><method><name>withTrackingUrls</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyFulfillmentUpdateRequest$BuildStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest.givenSomeShopifyFulfillmentAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenUpdatingFulfillmentUpdateRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentUpdateRequest$Steps</name></clazz><method><name>withTrackingUrls</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyFulfillmentUpdateRequest$BuildStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest.givenSomeShopifyFulfillmentAndSomeTrackingNumberAndSomeTrackingCompanyAndSomeLineItemsWhenUpdatingFulfillmentUpdateRequestThenReturnCorrectRequest(com.shopify.client.model.ShopifyFulfillmentUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyInventoryLevel</name></clazz><method><name>getAvailable</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyInventoryLevelTest.givenSomeValuesWhenCreatingShopifyInventoryLevelThenExpectCorrectValues(com.shopify.client.model.ShopifyInventoryLevelTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyInventoryLevel</name></clazz><method><name>getInventoryItemId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyInventoryLevelTest.givenSomeValuesWhenCreatingShopifyInventoryLevelThenExpectCorrectValues(com.shopify.client.model.ShopifyInventoryLevelTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyInventoryLevel</name></clazz><method><name>getLocationId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyInventoryLevelTest.givenSomeValuesWhenCreatingShopifyInventoryLevelThenExpectCorrectValues(com.shopify.client.model.ShopifyInventoryLevelTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyInventoryLevelRoot</name></clazz><method><name>getInventoryLevel</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyInventoryLevel;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyInventoryLevelRootTest.givenSomeValuesWhenCreatingShopifyInventoryLevelUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyInventoryLevelRootTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getBillingAddress</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyAddress;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getBrowserIp</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getCancelReason</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getCancelledAt</name></method><methodDesc>()Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getCartToken</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getClosedAt</name></method><methodDesc>()Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getCreatedAt</name></method><methodDesc>()Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getCurrency</name></method><methodDesc>()Ljava/util/Currency;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getEmail</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getFinancialStatus</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getFulfillmentStatus</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getFulfillments</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getLandingSite</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getLineItems</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getLocationId</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getNote</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getNoteAttributes</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getOrderNumber</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getOrderStatusUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getProcessedAt</name></method><methodDesc>()Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getProcessingMethod</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getReferringSite</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getTags</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getTaxLines</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getToken</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getTotaLineItemsPrice</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getTotalDiscounts</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getTotalPrice</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getTotalTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getTotalWeight</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getUpdatedAt</name></method><methodDesc>()Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getUserId</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>isBuyerAcceptsMarketing</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>isTaxesIncluded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyOrderTest.givenSomeValuesWhenSettingOrderValuesWhenCreatingShopifyOrderThenExpectCorrectValues(com.shopify.client.model.ShopifyOrderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProduct</name></clazz><method><name>getBodyHtml</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProduct</name></clazz><method><name>getImages</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProduct</name></clazz><method><name>getMetafieldsGlobalDescriptionTag</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProduct</name></clazz><method><name>getMetafieldsGlobalTitleTag</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProduct</name></clazz><method><name>getOptions</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProduct</name></clazz><method><name>getProductType</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProduct</name></clazz><method><name>getPublishedAt</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProduct</name></clazz><method><name>getSortedOptionNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductTest.givenSomeUnsortedOptionsWhenRetrievingSortedOptionNamesThenReturnSortedOptionNamesList(com.shopify.client.model.ShopifyProductTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProduct</name></clazz><method><name>getTags</name></method><methodDesc>()Ljava/util/Set;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProduct</name></clazz><method><name>getTitle</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProduct</name></clazz><method><name>getVariants</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProduct</name></clazz><method><name>getVendor</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProduct</name></clazz><method><name>isPublished</name></method><methodDesc>()Ljava/lang/Boolean;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProduct</name></clazz><method><name>isPublished</name></method><methodDesc>()Ljava/lang/Boolean;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProduct$1</name></clazz><method><name>compare</name></method><methodDesc>(Lcom/shopify/client/model/Option;Lcom/shopify/client/model/Option;)I</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductTest.givenSomeUnsortedOptionsWhenRetrievingSortedOptionNamesThenReturnSortedOptionNamesList(com.shopify.client.model.ShopifyProductTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProduct$1</name></clazz><method><name>compare</name></method><methodDesc>(Lcom/shopify/client/model/Option;Lcom/shopify/client/model/Option;)I</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductTest.givenSomeUnsortedOptionsWhenRetrievingSortedOptionNamesThenReturnSortedOptionNamesList(com.shopify.client.model.ShopifyProductTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest</name></clazz><method><name>getRequest</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProduct;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest</name></clazz><method><name>getVariantImagePosition</name></method><methodDesc>(I)I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest</name></clazz><method><name>hasChanged</name></method><methodDesc>()Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest</name></clazz><method><name>hasVariantImagePosition</name></method><methodDesc>(I)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest</name></clazz><method><name>newBuilder</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProductCreationRequest$TitleStep;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>build</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProductCreationRequest;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>lambda$withVariantCreationRequests$0</name></method><methodDesc>(Ljava/lang/String;Lcom/shopify/client/model/Image;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withBodyHtml</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductCreationRequest$MetafieldsGlobalDescriptionTagStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withBodyHtml</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductCreationRequest$MetafieldsGlobalDescriptionTagStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withImageSources</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$VariantCreationRequestsStep;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withImageSources</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$VariantCreationRequestsStep;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withImageSources</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$VariantCreationRequestsStep;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withImageSources</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$VariantCreationRequestsStep;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withImageSources</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$VariantCreationRequestsStep;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withImageSources</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$VariantCreationRequestsStep;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withImageSources</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$VariantCreationRequestsStep;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withMetafieldsGlobalDescriptionTag</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductCreationRequest$VendorStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withMetafieldsGlobalDescriptionTag</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductCreationRequest$VendorStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withMetafieldsGlobalTitleTag</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductCreationRequest$ProductTypeStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withMetafieldsGlobalTitleTag</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductCreationRequest$ProductTypeStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withProductType</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductCreationRequest$BodyHtmlStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withProductType</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductCreationRequest$BodyHtmlStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withPublished</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyProductCreationRequest$BuildStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withPublished</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyProductCreationRequest$BuildStep;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withPublished</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyProductCreationRequest$BuildStep;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenNoNewValuesSetAndPublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withSortedOptionNames</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$ImageSourcesStep;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withSortedOptionNames</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$ImageSourcesStep;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withSortedOptionNames</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$ImageSourcesStep;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withSortedOptionNames</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$ImageSourcesStep;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withSortedOptionNames</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$ImageSourcesStep;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withSortedOptionNames</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$ImageSourcesStep;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withSortedOptionNames</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$ImageSourcesStep;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withSortedOptionNames</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$ImageSourcesStep;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withTags</name></method><methodDesc>(Ljava/util/Set;)Lcom/shopify/client/model/ShopifyProductCreationRequest$SortedOptionNamesStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withTags</name></method><methodDesc>(Ljava/util/Set;)Lcom/shopify/client/model/ShopifyProductCreationRequest$SortedOptionNamesStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withTitle</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductCreationRequest$MetafieldsGlobalTitleTagStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withTitle</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductCreationRequest$MetafieldsGlobalTitleTagStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withVariantCreationRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$PublishedStep;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withVariantCreationRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$PublishedStep;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withVariantCreationRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$PublishedStep;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withVariantCreationRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$PublishedStep;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withVariantCreationRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$PublishedStep;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withVariantCreationRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$PublishedStep;</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withVariantCreationRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$PublishedStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withVariantCreationRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$PublishedStep;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withVariantCreationRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$PublishedStep;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withVariantCreationRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductCreationRequest$PublishedStep;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withVendor</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductCreationRequest$TagsStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductCreationRequest$Steps</name></clazz><method><name>withVendor</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductCreationRequest$TagsStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest</name></clazz><method><name>getProductId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyProductMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest</name></clazz><method><name>getRequest</name></method><methodDesc>()Lcom/shopify/client/model/Metafield;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyProductMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest</name></clazz><method><name>newBuilder</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProductMetafieldCreationRequest$ProductIdStep;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyProductMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest$Steps</name></clazz><method><name>build</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProductMetafieldCreationRequest;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyProductMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest$Steps</name></clazz><method><name>withKey</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductMetafieldCreationRequest$ValueStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyProductMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest$Steps</name></clazz><method><name>withKey</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductMetafieldCreationRequest$ValueStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyProductMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest$Steps</name></clazz><method><name>withNamespace</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductMetafieldCreationRequest$KeyStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyProductMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest$Steps</name></clazz><method><name>withNamespace</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductMetafieldCreationRequest$KeyStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyProductMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest$Steps</name></clazz><method><name>withProductId</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductMetafieldCreationRequest$NamespaceStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyProductMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest$Steps</name></clazz><method><name>withValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductMetafieldCreationRequest$ValueTypeStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyProductMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest$Steps</name></clazz><method><name>withValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductMetafieldCreationRequest$ValueTypeStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyProductMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest$Steps</name></clazz><method><name>withValueType</name></method><methodDesc>(Lcom/shopify/client/model/MetafieldValueType;)Lcom/shopify/client/model/ShopifyProductMetafieldCreationRequest$BuildStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyProductMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductMetafieldCreationRequest$Steps</name></clazz><method><name>withValueType</name></method><methodDesc>(Lcom/shopify/client/model/MetafieldValueType;)Lcom/shopify/client/model/ShopifyProductMetafieldCreationRequest$BuildStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyProductMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyProductMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest</name></clazz><method><name>getRequest</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProduct;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenNoNewValuesSetAndPublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest</name></clazz><method><name>getVariantImagePosition</name></method><methodDesc>(I)I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest</name></clazz><method><name>hasChanged</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenNoNewValuesSetAndPublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest</name></clazz><method><name>hasVariantImagePosition</name></method><methodDesc>(I)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenNoNewValuesSetAndPublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest</name></clazz><method><name>newBuilder</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProductUpdateRequest$CurrentShopifyProductStep;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenNoNewValuesSetAndPublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>build</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProductUpdateRequest;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>build</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProductUpdateRequest;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenNoNewValuesSetAndPublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>build</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProductUpdateRequest;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>doesNotEqual</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>doesNotEqual</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>doesNotEqual</name></method><methodDesc>(Ljava/util/Set;Ljava/util/Set;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>doesNotEqual</name></method><methodDesc>(Ljava/util/Set;Ljava/util/Set;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>lambda$build$0</name></method><methodDesc>(Lcom/shopify/client/model/Option;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>lambda$withImageSources$3</name></method><methodDesc>(Lcom/shopify/client/model/Image;Lcom/shopify/client/model/Image;)I</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>lambda$withVariantRequests$1</name></method><methodDesc>(Ljava/lang/String;Lcom/shopify/client/model/Image;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withBodyHtml</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$MetafieldsGlobalDescriptionTagStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withBodyHtml</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$MetafieldsGlobalDescriptionTagStep;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withBodyHtml</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$MetafieldsGlobalDescriptionTagStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withCurrentShopifyProduct</name></method><methodDesc>(Lcom/shopify/client/model/ShopifyProduct;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$TitleStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenNoNewValuesSetAndPublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withImageSources</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$VariantUpdateRequestsStep;</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withImageSources</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$VariantUpdateRequestsStep;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withImageSources</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$VariantUpdateRequestsStep;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withImageSources</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$VariantUpdateRequestsStep;</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withImageSources</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$VariantUpdateRequestsStep;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withImageSources</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$VariantUpdateRequestsStep;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withImageSources</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$VariantUpdateRequestsStep;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withImageSources</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$VariantUpdateRequestsStep;</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withMetafieldsGlobalDescriptionTag</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$VendorStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withMetafieldsGlobalDescriptionTag</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$VendorStep;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withMetafieldsGlobalDescriptionTag</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$VendorStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withMetafieldsGlobalTitleTag</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$ProductTypeStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withMetafieldsGlobalTitleTag</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$ProductTypeStep;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withMetafieldsGlobalTitleTag</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$ProductTypeStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withProductType</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$BodyHtmlStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withProductType</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$BodyHtmlStep;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withProductType</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$BodyHtmlStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withPublished</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyProductUpdateRequest$BuildStep;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenNoNewValuesSetAndPublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withPublished</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyProductUpdateRequest$BuildStep;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withPublished</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyProductUpdateRequest$BuildStep;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenNoNewValuesSetAndPublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withPublished</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyProductUpdateRequest$BuildStep;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withPublished</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyProductUpdateRequest$BuildStep;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withSameBodyHtml</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProductUpdateRequest$MetafieldsGlobalDescriptionTagStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenNoNewValuesSetAndPublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withSameImages</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProductUpdateRequest$VariantUpdateRequestsStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenNoNewValuesSetAndPublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withSameMetafieldsGlobalDescriptionTag</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProductUpdateRequest$VendorStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenNoNewValuesSetAndPublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withSameMetafieldsGlobalTitleTag</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProductUpdateRequest$ProductTypeStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenNoNewValuesSetAndPublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withSameOptions</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProductUpdateRequest$ImageSourcesStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenNoNewValuesSetAndPublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withSameProductType</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProductUpdateRequest$BodyHtmlStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenNoNewValuesSetAndPublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withSameTags</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProductUpdateRequest$SortedOptionNamesStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenNoNewValuesSetAndPublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withSameTitle</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProductUpdateRequest$MetafieldsGlobalTitleTagStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenNoNewValuesSetAndPublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withSameVariants</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenNoNewValuesSetAndPublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withSameVendor</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProductUpdateRequest$TagsStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenNoNewValuesSetAndPublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withSortedOptionNames</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$ImageSourcesStep;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withSortedOptionNames</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$ImageSourcesStep;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withSortedOptionNames</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$ImageSourcesStep;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withSortedOptionNames</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$ImageSourcesStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withSortedOptionNames</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$ImageSourcesStep;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withSortedOptionNames</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$ImageSourcesStep;</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withSortedOptionNames</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$ImageSourcesStep;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withSortedOptionNames</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$ImageSourcesStep;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withSortedOptionNames</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$ImageSourcesStep;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withTags</name></method><methodDesc>(Ljava/util/Set;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$SortedOptionNamesStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withTags</name></method><methodDesc>(Ljava/util/Set;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$SortedOptionNamesStep;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withTags</name></method><methodDesc>(Ljava/util/Set;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$SortedOptionNamesStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withTitle</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$MetafieldsGlobalTitleTagStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withTitle</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$MetafieldsGlobalTitleTagStep;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withTitle</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$MetafieldsGlobalTitleTagStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVariantRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVariantRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep;</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVariantRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep;</methodDesc></location><indexes><int>184</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVariantRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep;</methodDesc></location><indexes><int>165</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVariantRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVariantRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVariantRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVariantRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep;</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVariantRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep;</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVariantRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep;</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVariantRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep;</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVariantRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep;</methodDesc></location><indexes><int>184</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVariantRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep;</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVariantRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep;</methodDesc></location><indexes><int>228</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVariantRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep;</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVariantRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep;</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVariantRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep;</methodDesc></location><indexes><int>161</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVariantRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep;</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVariantRequests</name></method><methodDesc>(Ljava/util/List;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$PublishedStep;</methodDesc></location><indexes><int>224</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVendor</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$TagsStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVendor</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$TagsStep;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductUpdateRequest$Steps</name></clazz><method><name>withVendor</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProductUpdateRequest$TagsStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductUpdateRequestTest.givenAllNewValuesSetAndUnpublishedWhenBuildingShopifyProductUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationCharge</name></clazz><method><name>getCappedAmount</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationCharge</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationCharge</name></clazz><method><name>getPrice</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationCharge</name></clazz><method><name>getReturnUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationCharge</name></clazz><method><name>getTerms</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationCharge</name></clazz><method><name>getTrialDays</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationCharge</name></clazz><method><name>isTest</name></method><methodDesc>()Ljava/lang/Boolean;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest</name></clazz><method><name>getRequest</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyRecurringApplicationCharge;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest</name></clazz><method><name>newBuilder</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$NameStep;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$Steps</name></clazz><method><name>build</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$Steps</name></clazz><method><name>withCappedAmount</name></method><methodDesc>(Ljava/math/BigDecimal;)Lcom/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$ReturnUrlStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$Steps</name></clazz><method><name>withCappedAmount</name></method><methodDesc>(Ljava/math/BigDecimal;)Lcom/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$ReturnUrlStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$Steps</name></clazz><method><name>withName</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$TermsStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$Steps</name></clazz><method><name>withName</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$TermsStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$Steps</name></clazz><method><name>withPrice</name></method><methodDesc>(Ljava/math/BigDecimal;)Lcom/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$CappedAmountStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$Steps</name></clazz><method><name>withPrice</name></method><methodDesc>(Ljava/math/BigDecimal;)Lcom/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$CappedAmountStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$Steps</name></clazz><method><name>withReturnUrl</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$TrialDaysStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$Steps</name></clazz><method><name>withReturnUrl</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$TrialDaysStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$Steps</name></clazz><method><name>withTerms</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$PriceStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$Steps</name></clazz><method><name>withTerms</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$PriceStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$Steps</name></clazz><method><name>withTest</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$BuildStep;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$Steps</name></clazz><method><name>withTest</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$BuildStep;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$Steps</name></clazz><method><name>withTrialDays</name></method><methodDesc>(I)Lcom/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$TestStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$Steps</name></clazz><method><name>withTrialDays</name></method><methodDesc>(I)Lcom/shopify/client/model/ShopifyRecurringApplicationChargeCreationRequest$TestStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest.givenSomeValuesWhenCreatingRequestThenReturnExpectedRequestValues(com.shopify.client.model.ShopifyRecurringApplicationChargeCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyShop</name></clazz><method><name>getShop</name></method><methodDesc>()Lcom/shopify/client/model/Shop;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.channelape.shopify.business.service.factories.ShopifyClientFactoryTest.givenSomeCredentialsWithShopSubdomainAndAccessTokenWhenGeneratingClientThenReturnShopifyClient(com.channelape.shopify.business.service.factories.ShopifyClientFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>getAvailable</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetAndNoCompareAtPriceAndNoImageSourceAndDefaultInventoryPolicyAndDefaultFulfillmentSErviceAndDefaultInventoryManagementAndDefaultRequiresShippingAndDefaultTaxableWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>getBarcode</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetAndNoCompareAtPriceAndNoImageSourceAndDefaultInventoryPolicyAndDefaultFulfillmentSErviceAndDefaultInventoryManagementAndDefaultRequiresShippingAndDefaultTaxableWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>getCompareAtPrice</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetAndNoCompareAtPriceAndNoImageSourceAndDefaultInventoryPolicyAndDefaultFulfillmentSErviceAndDefaultInventoryManagementAndDefaultRequiresShippingAndDefaultTaxableWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>getFulfillmentService</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetAndNoCompareAtPriceAndNoImageSourceAndDefaultInventoryPolicyAndDefaultFulfillmentSErviceAndDefaultInventoryManagementAndDefaultRequiresShippingAndDefaultTaxableWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>getGrams</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetAndNoCompareAtPriceAndNoImageSourceAndDefaultInventoryPolicyAndDefaultFulfillmentSErviceAndDefaultInventoryManagementAndDefaultRequiresShippingAndDefaultTaxableWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>getImageId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>getInventoryManagement</name></method><methodDesc>()Lcom/shopify/client/model/InventoryManagement;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetAndNoCompareAtPriceAndNoImageSourceAndDefaultInventoryPolicyAndDefaultFulfillmentSErviceAndDefaultInventoryManagementAndDefaultRequiresShippingAndDefaultTaxableWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>getInventoryPolicy</name></method><methodDesc>()Lcom/shopify/client/model/InventoryPolicy;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetAndNoCompareAtPriceAndNoImageSourceAndDefaultInventoryPolicyAndDefaultFulfillmentSErviceAndDefaultInventoryManagementAndDefaultRequiresShippingAndDefaultTaxableWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>getOption1</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithNullFirstOptionAndOtherShopifyVariantRequestWithYellowFirstOptionWhenComparingThenReturnANegativeNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>getOption2</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetAndNoCompareAtPriceAndNoImageSourceAndDefaultInventoryPolicyAndDefaultFulfillmentSErviceAndDefaultInventoryManagementAndDefaultRequiresShippingAndDefaultTaxableWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>getOption3</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetAndNoCompareAtPriceAndNoImageSourceAndDefaultInventoryPolicyAndDefaultFulfillmentSErviceAndDefaultInventoryManagementAndDefaultRequiresShippingAndDefaultTaxableWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>getPosition</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>getPrice</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetAndNoCompareAtPriceAndNoImageSourceAndDefaultInventoryPolicyAndDefaultFulfillmentSErviceAndDefaultInventoryManagementAndDefaultRequiresShippingAndDefaultTaxableWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>getSku</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetAndNoCompareAtPriceAndNoImageSourceAndDefaultInventoryPolicyAndDefaultFulfillmentSErviceAndDefaultInventoryManagementAndDefaultRequiresShippingAndDefaultTaxableWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>isRequiresShipping</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetAndNoCompareAtPriceAndNoImageSourceAndDefaultInventoryPolicyAndDefaultFulfillmentSErviceAndDefaultInventoryManagementAndDefaultRequiresShippingAndDefaultTaxableWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>isTaxable</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetAndNoCompareAtPriceAndNoImageSourceAndDefaultInventoryPolicyAndDefaultFulfillmentSErviceAndDefaultInventoryManagementAndDefaultRequiresShippingAndDefaultTaxableWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest</name></clazz><method><name>getImageSource</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest</name></clazz><method><name>getRequest</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariant;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest</name></clazz><method><name>hasChanged</name></method><methodDesc>()Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest</name></clazz><method><name>hasImageSource</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest</name></clazz><method><name>hasImageSource</name></method><methodDesc>()Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyProductCreationRequestTest.givenValuesSetAndUnpublishedWhenBuildingShopifyProductCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyProductCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest</name></clazz><method><name>newBuilder</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantCreationRequest$PriceStep;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>build</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantCreationRequest;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithNullFirstOptionAndOtherShopifyVariantRequestWithYellowFirstOptionWhenComparingThenReturnANegativeNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>noCompareAtPrice</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantCreationRequest$SkuStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetAndNoCompareAtPriceAndNoImageSourceAndDefaultInventoryPolicyAndDefaultFulfillmentSErviceAndDefaultInventoryManagementAndDefaultRequiresShippingAndDefaultTaxableWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>noImageSource</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantCreationRequest$InventoryManagementStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithNullFirstOptionAndOtherShopifyVariantRequestWithYellowFirstOptionWhenComparingThenReturnANegativeNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>noSecondOption</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantCreationRequest$ThirdOptionStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithNullFirstOptionAndOtherShopifyVariantRequestWithYellowFirstOptionWhenComparingThenReturnANegativeNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>noThirdOption</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantCreationRequest$ImageSourceStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithNullFirstOptionAndOtherShopifyVariantRequestWithYellowFirstOptionWhenComparingThenReturnANegativeNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withAvailable</name></method><methodDesc>(J)Lcom/shopify/client/model/ShopifyVariantCreationRequest$FirstOptionStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithNullFirstOptionAndOtherShopifyVariantRequestWithYellowFirstOptionWhenComparingThenReturnANegativeNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withAvailable</name></method><methodDesc>(J)Lcom/shopify/client/model/ShopifyVariantCreationRequest$FirstOptionStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withBarcode</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$WeightStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithNullFirstOptionAndOtherShopifyVariantRequestWithYellowFirstOptionWhenComparingThenReturnANegativeNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withBarcode</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$WeightStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withCompareAtPrice</name></method><methodDesc>(Lcom/channelape/business/model/Money;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$SkuStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithNullFirstOptionAndOtherShopifyVariantRequestWithYellowFirstOptionWhenComparingThenReturnANegativeNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withCompareAtPrice</name></method><methodDesc>(Lcom/channelape/business/model/Money;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$SkuStep;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withDefaultFulfillmentService</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantCreationRequest$RequiresShippingStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithNullFirstOptionAndOtherShopifyVariantRequestWithYellowFirstOptionWhenComparingThenReturnANegativeNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withDefaultFulfillmentService</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantCreationRequest$RequiresShippingStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetAndNoCompareAtPriceAndNoImageSourceAndDefaultInventoryPolicyAndDefaultFulfillmentSErviceAndDefaultInventoryManagementAndDefaultRequiresShippingAndDefaultTaxableWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withDefaultInventoryManagement</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantCreationRequest$InventoryPolicyStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithNullFirstOptionAndOtherShopifyVariantRequestWithYellowFirstOptionWhenComparingThenReturnANegativeNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withDefaultInventoryManagement</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantCreationRequest$InventoryPolicyStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetAndNoCompareAtPriceAndNoImageSourceAndDefaultInventoryPolicyAndDefaultFulfillmentSErviceAndDefaultInventoryManagementAndDefaultRequiresShippingAndDefaultTaxableWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withDefaultInventoryPolicy</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantCreationRequest$FulfillmentServiceStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithNullFirstOptionAndOtherShopifyVariantRequestWithYellowFirstOptionWhenComparingThenReturnANegativeNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withDefaultInventoryPolicy</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantCreationRequest$FulfillmentServiceStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetAndNoCompareAtPriceAndNoImageSourceAndDefaultInventoryPolicyAndDefaultFulfillmentSErviceAndDefaultInventoryManagementAndDefaultRequiresShippingAndDefaultTaxableWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withFirstOption</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$SecondOptionStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithNullFirstOptionAndOtherShopifyVariantRequestWithYellowFirstOptionWhenComparingThenReturnANegativeNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withFirstOption</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$SecondOptionStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithNullFirstOptionAndOtherShopifyVariantRequestWithYellowFirstOptionWhenComparingThenReturnANegativeNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withFulfillmentService</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$RequiresShippingStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withFulfillmentService</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$RequiresShippingStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withImageSource</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$InventoryManagementStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withInventoryManagement</name></method><methodDesc>(Lcom/shopify/client/model/InventoryManagement;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$InventoryPolicyStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withInventoryManagement</name></method><methodDesc>(Lcom/shopify/client/model/InventoryManagement;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$InventoryPolicyStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withInventoryPolicy</name></method><methodDesc>(Lcom/shopify/client/model/InventoryPolicy;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$FulfillmentServiceStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withInventoryPolicy</name></method><methodDesc>(Lcom/shopify/client/model/InventoryPolicy;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$FulfillmentServiceStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withPrice</name></method><methodDesc>(Lcom/channelape/business/model/Money;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$CompareAtPriceStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithNullFirstOptionAndOtherShopifyVariantRequestWithYellowFirstOptionWhenComparingThenReturnANegativeNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withPrice</name></method><methodDesc>(Lcom/channelape/business/model/Money;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$CompareAtPriceStep;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withRequiresShipping</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyVariantCreationRequest$TaxableStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withRequiresShipping</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyVariantCreationRequest$TaxableStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withRequiresShippingDefault</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantCreationRequest$TaxableStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithNullFirstOptionAndOtherShopifyVariantRequestWithYellowFirstOptionWhenComparingThenReturnANegativeNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withRequiresShippingDefault</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantCreationRequest$TaxableStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetAndNoCompareAtPriceAndNoImageSourceAndDefaultInventoryPolicyAndDefaultFulfillmentSErviceAndDefaultInventoryManagementAndDefaultRequiresShippingAndDefaultTaxableWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withSecondOption</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$ThirdOptionStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withSecondOption</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$ThirdOptionStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withSku</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$BarcodeStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithNullFirstOptionAndOtherShopifyVariantRequestWithYellowFirstOptionWhenComparingThenReturnANegativeNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withSku</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$BarcodeStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withTaxable</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyVariantCreationRequest$BuildStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withTaxable</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyVariantCreationRequest$BuildStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withTaxableDefault</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantCreationRequest$BuildStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithNullFirstOptionAndOtherShopifyVariantRequestWithYellowFirstOptionWhenComparingThenReturnANegativeNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withTaxableDefault</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantCreationRequest$BuildStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetAndNoCompareAtPriceAndNoImageSourceAndDefaultInventoryPolicyAndDefaultFulfillmentSErviceAndDefaultInventoryManagementAndDefaultRequiresShippingAndDefaultTaxableWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withThirdOption</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$ImageSourceStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withThirdOption</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$ImageSourceStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withWeight</name></method><methodDesc>(Lcom/channelape/business/model/Weight;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$AvailableStep;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithNullFirstOptionAndOtherShopifyVariantRequestWithYellowFirstOptionWhenComparingThenReturnANegativeNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>withWeight</name></method><methodDesc>(Lcom/channelape/business/model/Weight;)Lcom/shopify/client/model/ShopifyVariantCreationRequest$AvailableStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantCreationRequestTest.givenValuesSetWhenBuildingShopifyVariantCreationRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest</name></clazz><method><name>getRequest</name></method><methodDesc>()Lcom/shopify/client/model/Metafield;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyVariantMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest</name></clazz><method><name>getVariantId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyVariantMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest</name></clazz><method><name>newBuilder</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantMetafieldCreationRequest$VariantIdStep;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyVariantMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest$Steps</name></clazz><method><name>build</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantMetafieldCreationRequest;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyVariantMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest$Steps</name></clazz><method><name>withKey</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantMetafieldCreationRequest$ValueStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyVariantMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest$Steps</name></clazz><method><name>withKey</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantMetafieldCreationRequest$ValueStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyVariantMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest$Steps</name></clazz><method><name>withNamespace</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantMetafieldCreationRequest$KeyStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyVariantMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest$Steps</name></clazz><method><name>withNamespace</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantMetafieldCreationRequest$KeyStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyVariantMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest$Steps</name></clazz><method><name>withValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantMetafieldCreationRequest$ValueTypeStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyVariantMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest$Steps</name></clazz><method><name>withValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantMetafieldCreationRequest$ValueTypeStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyVariantMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest$Steps</name></clazz><method><name>withValueType</name></method><methodDesc>(Lcom/shopify/client/model/MetafieldValueType;)Lcom/shopify/client/model/ShopifyVariantMetafieldCreationRequest$BuildStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyVariantMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest$Steps</name></clazz><method><name>withValueType</name></method><methodDesc>(Lcom/shopify/client/model/MetafieldValueType;)Lcom/shopify/client/model/ShopifyVariantMetafieldCreationRequest$BuildStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyVariantMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantMetafieldCreationRequest$Steps</name></clazz><method><name>withVariantId</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantMetafieldCreationRequest$NamespaceStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest.givenSomeValuesWhenCreatingShopifyVariantMetafieldCreationRequestThenReturnValues(com.shopify.client.model.ShopifyVariantMetafieldCreationRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantRequestOption1Comparator</name></clazz><method><name>compare</name></method><methodDesc>(Lcom/shopify/client/model/ShopifyVariantRequest;Lcom/shopify/client/model/ShopifyVariantRequest;)I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithNullFirstOptionAndOtherShopifyVariantRequestWithYellowFirstOptionWhenComparingThenReturnANegativeNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantRequestOption1Comparator</name></clazz><method><name>compare</name></method><methodDesc>(Lcom/shopify/client/model/ShopifyVariantRequest;Lcom/shopify/client/model/ShopifyVariantRequest;)I</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithYellowFirstOptionAndOtherShopifyVariantRequestWithNullFirstOptionWhenComparingThenReturnAPositiveNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantRequestOption1Comparator</name></clazz><method><name>compare</name></method><methodDesc>(Lcom/shopify/client/model/ShopifyVariantRequest;Lcom/shopify/client/model/ShopifyVariantRequest;)I</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest.givenShopifyVariantRequestWithNullFirstOptionAndOtherShopifyVariantRequestWithYellowFirstOptionWhenComparingThenReturnANegativeNumber(com.shopify.client.model.ShopifyVariantRequestOption1ComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantRequestPositionComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lcom/shopify/client/model/ShopifyVariantRequest;Lcom/shopify/client/model/ShopifyVariantRequest;)I</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantRequestPositionComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lcom/shopify/client/model/ShopifyVariantRequest;Lcom/shopify/client/model/ShopifyVariantRequest;)I</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest</name></clazz><method><name>getImageSource</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest</name></clazz><method><name>getRequest</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariant;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest</name></clazz><method><name>hasChanged</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest</name></clazz><method><name>hasImageSource</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest</name></clazz><method><name>hasImageSource</name></method><methodDesc>()Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest</name></clazz><method><name>newBuilder</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$CurrentShopifyVariantStep;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>build</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>doesNotEqual</name></method><methodDesc>(JJ)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>doesNotEqual</name></method><methodDesc>(JJ)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>doesNotEqual</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>doesNotEqual</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>doesNotEqual</name></method><methodDesc>(ZZ)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>doesNotEqual</name></method><methodDesc>(ZZ)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>isNotNull</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesAndNoOptionsAndNoImageSetWhenBuildingShopifyVariantUpdateRequestWithNullPriceAndNullCompareAtPriceThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>isNotNull</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesAndNoOptionsAndNoImageSetWhenBuildingShopifyVariantUpdateRequestWithNullPriceAndNullCompareAtPriceThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>noFirstOption</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$SecondOptionStep;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesAndNoOptionsAndNoImageSetWhenBuildingShopifyVariantUpdateRequestWithNullPriceAndNullCompareAtPriceThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>noFirstOption</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$SecondOptionStep;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesAndNoOptionsAndNoImageSetWhenBuildingShopifyVariantUpdateRequestWithNullPriceAndNullCompareAtPriceThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>noFirstOption</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$SecondOptionStep;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesAndNoOptionsAndNoImageSetWhenBuildingShopifyVariantUpdateRequestWithNullPriceAndNullCompareAtPriceThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>noImage</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$InventoryManagementStep;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesAndNoOptionsAndNoImageSetWhenBuildingShopifyVariantUpdateRequestWithNullPriceAndNullCompareAtPriceThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>noImage</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$InventoryManagementStep;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesAndNoOptionsAndNoImageSetWhenBuildingShopifyVariantUpdateRequestWithNullPriceAndNullCompareAtPriceThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>noImage</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$InventoryManagementStep;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesAndNoOptionsAndNoImageSetWhenBuildingShopifyVariantUpdateRequestWithNullPriceAndNullCompareAtPriceThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>noSecondOption</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$ThirdOptionStep;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesAndNoOptionsAndNoImageSetWhenBuildingShopifyVariantUpdateRequestWithNullPriceAndNullCompareAtPriceThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>noSecondOption</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$ThirdOptionStep;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesAndNoOptionsAndNoImageSetWhenBuildingShopifyVariantUpdateRequestWithNullPriceAndNullCompareAtPriceThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>noSecondOption</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$ThirdOptionStep;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesAndNoOptionsAndNoImageSetWhenBuildingShopifyVariantUpdateRequestWithNullPriceAndNullCompareAtPriceThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>noThirdOption</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$ImageSourceStep;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesAndNoOptionsAndNoImageSetWhenBuildingShopifyVariantUpdateRequestWithNullPriceAndNullCompareAtPriceThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>noThirdOption</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$ImageSourceStep;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesAndNoOptionsAndNoImageSetWhenBuildingShopifyVariantUpdateRequestWithNullPriceAndNullCompareAtPriceThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>noThirdOption</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$ImageSourceStep;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesAndNoOptionsAndNoImageSetWhenBuildingShopifyVariantUpdateRequestWithNullPriceAndNullCompareAtPriceThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withAvailable</name></method><methodDesc>(J)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$FirstOptionStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withAvailable</name></method><methodDesc>(J)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$FirstOptionStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withBarcode</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$WeightStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withBarcode</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$WeightStep;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withBarcode</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$WeightStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withCompareAtPrice</name></method><methodDesc>(Lcom/channelape/business/model/Money;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$SkuStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesAndNoOptionsAndNoImageSetWhenBuildingShopifyVariantUpdateRequestWithNullPriceAndNullCompareAtPriceThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withCompareAtPrice</name></method><methodDesc>(Lcom/channelape/business/model/Money;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$SkuStep;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withCompareAtPrice</name></method><methodDesc>(Lcom/channelape/business/model/Money;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$SkuStep;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withCompareAtPrice</name></method><methodDesc>(Lcom/channelape/business/model/Money;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$SkuStep;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withCurrentShopifyVariant</name></method><methodDesc>(Lcom/shopify/client/model/ShopifyVariant;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$PriceStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withFirstOption</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$SecondOptionStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withFirstOption</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$SecondOptionStep;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withFirstOption</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$SecondOptionStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withFulfillmentService</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$RequiresShippingStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withFulfillmentService</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$RequiresShippingStep;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withFulfillmentService</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$RequiresShippingStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withImageSource</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$InventoryManagementStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withImageSource</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$InventoryManagementStep;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withInventoryManagement</name></method><methodDesc>(Lcom/shopify/client/model/InventoryManagement;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$InventoryPolicyStep;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withInventoryManagement</name></method><methodDesc>(Lcom/shopify/client/model/InventoryManagement;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$InventoryPolicyStep;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withInventoryManagement</name></method><methodDesc>(Lcom/shopify/client/model/InventoryManagement;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$InventoryPolicyStep;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withInventoryPolicy</name></method><methodDesc>(Lcom/shopify/client/model/InventoryPolicy;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$FulfillmentServiceStep;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withInventoryPolicy</name></method><methodDesc>(Lcom/shopify/client/model/InventoryPolicy;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$FulfillmentServiceStep;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withInventoryPolicy</name></method><methodDesc>(Lcom/shopify/client/model/InventoryPolicy;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$FulfillmentServiceStep;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withPrice</name></method><methodDesc>(Lcom/channelape/business/model/Money;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$CompareAtPriceStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesAndNoOptionsAndNoImageSetWhenBuildingShopifyVariantUpdateRequestWithNullPriceAndNullCompareAtPriceThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withPrice</name></method><methodDesc>(Lcom/channelape/business/model/Money;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$CompareAtPriceStep;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withPrice</name></method><methodDesc>(Lcom/channelape/business/model/Money;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$CompareAtPriceStep;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withPrice</name></method><methodDesc>(Lcom/channelape/business/model/Money;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$CompareAtPriceStep;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withRequiresShipping</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$TaxableStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withRequiresShipping</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$TaxableStep;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withRequiresShipping</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$TaxableStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSameBarcode</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$WeightStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSameCompareAtPrice</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$SkuStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSameFirstOption</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$SecondOptionStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSameFulfillmentService</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$RequiresShippingStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSameImage</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$InventoryManagementStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSameInventoryItemId</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$BuildStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSameInventoryManagement</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$InventoryPolicyStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSameInventoryPolicy</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$FulfillmentServiceStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSamePrice</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$CompareAtPriceStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSameRequiresShipping</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$TaxableStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSameSecondOption</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$ThirdOptionStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSameSku</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$BarcodeStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSameTaxable</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$InventoryItemIdStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSameThirdOption</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$ImageSourceStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSameWeight</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantUpdateRequest$AvailableStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenNoNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSecondOption</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$ThirdOptionStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSecondOption</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$ThirdOptionStep;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSecondOption</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$ThirdOptionStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSku</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$BarcodeStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSku</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$BarcodeStep;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withSku</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$BarcodeStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withTaxable</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$InventoryItemIdStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withTaxable</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$InventoryItemIdStep;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withTaxable</name></method><methodDesc>(Z)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$InventoryItemIdStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withThirdOption</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$ImageSourceStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withThirdOption</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$ImageSourceStep;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withThirdOption</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$ImageSourceStep;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withWeight</name></method><methodDesc>(Lcom/channelape/business/model/Weight;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$AvailableStep;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withWeight</name></method><methodDesc>(Lcom/channelape/business/model/Weight;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$AvailableStep;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withWeight</name></method><methodDesc>(Lcom/channelape/business/model/Weight;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$AvailableStep;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.ShopifyVariantUpdateRequestTest.givenAllNewValuesSetWhenBuildingShopifyVariantUpdateRequestThenExpectCorrectValues(com.shopify.client.model.ShopifyVariantUpdateRequestTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/CurrencyAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Ljava/util/Currency;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.CurrencyAdapterTest.giveNullCurrencyWhenMarshallingThenReturnNullString(com.shopify.client.model.adapters.CurrencyAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/CurrencyAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Ljava/util/Currency;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.CurrencyAdapterTest.giveNullCurrencyWhenMarshallingThenReturnNullString(com.shopify.client.model.adapters.CurrencyAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/CurrencyAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Ljava/util/Currency;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.CurrencyAdapterTest.giveSomeCurrencyWhenMarshallingThenReturnCurrencyCode(com.shopify.client.model.adapters.CurrencyAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/CurrencyAdapter</name></clazz><method><name>unmarshal</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Currency;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.CurrencyAdapterTest.givenSomeCurrencyCodeWhenUnmarshallingThenReturnCurrency(com.shopify.client.model.adapters.CurrencyAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/CurrencyAdapter</name></clazz><method><name>unmarshal</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Currency;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.CurrencyAdapterTest.givenEmptyCurrencyCodeWhenUnmarshallingThenReturnNullCurrency(com.shopify.client.model.adapters.CurrencyAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/CurrencyAdapter</name></clazz><method><name>unmarshal</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Currency;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.CurrencyAdapterTest.givenSomeCurrencyCodeWhenUnmarshallingThenReturnCurrency(com.shopify.client.model.adapters.CurrencyAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/DateTimeAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Lorg/joda/time/DateTime;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.DateTimeAdapterTest.giveNullDateTimeWhenMarshallingThenReturnNullString(com.shopify.client.model.adapters.DateTimeAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/DateTimeAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Lorg/joda/time/DateTime;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.DateTimeAdapterTest.giveNullDateTimeWhenMarshallingThenReturnNullString(com.shopify.client.model.adapters.DateTimeAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/DateTimeAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Lorg/joda/time/DateTime;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.DateTimeAdapterTest.giveSomeDateTimeWhenMarshallingThenReturnTimestamp(com.shopify.client.model.adapters.DateTimeAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/DateTimeAdapter</name></clazz><method><name>unmarshal</name></method><methodDesc>(Ljava/lang/String;)Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.DateTimeAdapterTest.givenEmptyTimestampWhenUnmarshallingThenReturnNullDateTime(com.shopify.client.model.adapters.DateTimeAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/DateTimeAdapter</name></clazz><method><name>unmarshal</name></method><methodDesc>(Ljava/lang/String;)Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.DateTimeAdapterTest.givenEmptyTimestampWhenUnmarshallingThenReturnNullDateTime(com.shopify.client.model.adapters.DateTimeAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/DateTimeAdapter</name></clazz><method><name>unmarshal</name></method><methodDesc>(Ljava/lang/String;)Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.DateTimeAdapterTest.givenSomeTimestampWhenUnmarshallingThenReturnDateTime(com.shopify.client.model.adapters.DateTimeAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/EscapedStringAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.EscapedStringAdapterTest.giveSomeUnescapedStringWhenMarshallingThenReturnUnescapedString(com.shopify.client.model.adapters.EscapedStringAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/EscapedStringAdapter</name></clazz><method><name>unmarshal</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.EscapedStringAdapterTest.giveSomeEscapedStringWhenUnmarshallingThenReturnUnescapedString(com.shopify.client.model.adapters.EscapedStringAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/EscapedStringsAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Ljava/util/Collection;)Ljava/util/Collection;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.EscapedStringsAdapterTest.giveSomeUnescapedStringsWhenMarshallingThenReturnUnescapedStrings(com.shopify.client.model.adapters.EscapedStringsAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/EscapedStringsAdapter</name></clazz><method><name>unmarshal</name></method><methodDesc>(Ljava/util/Collection;)Ljava/util/Collection;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.EscapedStringsAdapterTest.giveNullWhenUnmarshallingThenReturnNull(com.shopify.client.model.adapters.EscapedStringsAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/EscapedStringsAdapter</name></clazz><method><name>unmarshal</name></method><methodDesc>(Ljava/util/Collection;)Ljava/util/Collection;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.EscapedStringsAdapterTest.giveNullWhenUnmarshallingThenReturnNull(com.shopify.client.model.adapters.EscapedStringsAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/InventoryManagementAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Lcom/shopify/client/model/InventoryManagement;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.InventoryManagementAdapterTest.giveSomeInventoryManagementWhenMarshallingThenReturnMarshalledString(com.shopify.client.model.adapters.InventoryManagementAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/InventoryManagementAdapter</name></clazz><method><name>unmarshal</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/InventoryManagement;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.InventoryManagementAdapterTest.givenSomeStringWhenUnmarshallingThenReturnInventoryManagement(com.shopify.client.model.adapters.InventoryManagementAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/InventoryPolicyAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Lcom/shopify/client/model/InventoryPolicy;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.InventoryPolicyAdapterTest.giveSomeInventoryPolicyWhenMarshallingThenReturnMarshalledString(com.shopify.client.model.adapters.InventoryPolicyAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/InventoryPolicyAdapter</name></clazz><method><name>unmarshal</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/InventoryPolicy;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.InventoryPolicyAdapterTest.givenSomeStringWhenUnmarshallingThenReturnInventoryPolicy(com.shopify.client.model.adapters.InventoryPolicyAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/InventoryQuantityAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Ljava/lang/Long;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.InventoryQuantityAdapterTest.givenSomeInventoryQuantityWhenMarshallingThenReturnNullString(com.shopify.client.model.adapters.InventoryQuantityAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/InventoryQuantityAdapter</name></clazz><method><name>unmarshal</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/Long;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.InventoryQuantityAdapterTest.givenSomeStringWhenUnmarshallingThenReturnInventoryQuantity(com.shopify.client.model.adapters.InventoryQuantityAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/MetafieldValueTypeAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Lcom/shopify/client/model/MetafieldValueType;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.MetafieldValueTypeAdapterTest.giveSomeMetafieldValueTypeWhenMarshallingThenReturnMarshalledString(com.shopify.client.model.adapters.MetafieldValueTypeAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/MetafieldValueTypeAdapter</name></clazz><method><name>unmarshal</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/MetafieldValueType;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.MetafieldValueTypeAdapterTest.givenSomeStringWhenUnmarshallingThenReturnMetafieldValueType(com.shopify.client.model.adapters.MetafieldValueTypeAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/OrderRiskRecommendationAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Lcom/shopify/client/model/OrderRiskRecommendation;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.OrderRiskRecommendationAdapterTest.giveCancelOrderRiskRecommendationWhenMarshallingThenReturnMarshalledString(com.shopify.client.model.adapters.OrderRiskRecommendationAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/OrderRiskRecommendationAdapter</name></clazz><method><name>unmarshal</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/OrderRiskRecommendation;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.OrderRiskRecommendationAdapterTest.givenAcceptStringWhenUnmarshallingThenReturnOrderRiskRecommendation(com.shopify.client.model.adapters.OrderRiskRecommendationAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/TagsAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Ljava/util/Set;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.TagsAdapterTest.givenNullTagsWhenMarshallingThenReturnNullString(com.shopify.client.model.adapters.TagsAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/TagsAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Ljava/util/Set;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.TagsAdapterTest.giveSomeTagsWhenMarshallingThenReturnMarshalledString(com.shopify.client.model.adapters.TagsAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/TagsAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Ljava/util/Set;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.TagsAdapterTest.giveSomeTagsWhenMarshallingThenReturnMarshalledString(com.shopify.client.model.adapters.TagsAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/TagsAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Ljava/util/Set;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.TagsAdapterTest.givenNullTagsWhenMarshallingThenReturnNullString(com.shopify.client.model.adapters.TagsAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/TagsAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Ljava/util/Set;)Ljava/lang/String;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.TagsAdapterTest.giveSomeTagsWhenMarshallingThenReturnMarshalledString(com.shopify.client.model.adapters.TagsAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/TagsAdapter</name></clazz><method><name>unmarshal</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Set;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.TagsAdapterTest.givenSomeStringWhenUnmarshallingThenReturnTags(com.shopify.client.model.adapters.TagsAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/TagsAdapter</name></clazz><method><name>unmarshal</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Set;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.TagsAdapterTest.givenEmptyStringWhenUnmarshallingThenReturnEmptyTags(com.shopify.client.model.adapters.TagsAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/adapters/TagsAdapter</name></clazz><method><name>unmarshal</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Set;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.model.adapters.TagsAdapterTest.givenSomeStringWhenUnmarshallingThenReturnTags(com.shopify.client.model.adapters.TagsAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/rest/model/ShopifyCredential</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.rest.model.ShopifyCredentialTest.givenAccessTokenShopifyCredentialWhenRetrievingValueThenReturnaccessTokenString(com.shopify.rest.model.ShopifyCredentialTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/rest/model/ShopifyResponse</name></clazz><method><name>getAccessToken</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest.givenValidShopSubdomainAndValidAuthorizationCodeWhenGeneratingAccessTokenThenReturnAccessTokenWithCreatedStateAndCorrectValue(com.channelape.shopify.business.client.impl.ShopifyAccessTokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLineItem</name></clazz><method><name>getFulfillableQuantity</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLineItem</name></clazz><method><name>getFulfillmentService</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLineItem</name></clazz><method><name>getFulfillmentStatus</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLineItem</name></clazz><method><name>getGrams</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLineItem</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLineItem</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLineItem</name></clazz><method><name>getPrice</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLineItem</name></clazz><method><name>getProductId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLineItem</name></clazz><method><name>getQuantity</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLineItem</name></clazz><method><name>getSku</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLineItem</name></clazz><method><name>getTitle</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLineItem</name></clazz><method><name>getTotalDiscount</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLineItem</name></clazz><method><name>getVariantId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLineItem</name></clazz><method><name>getVariantInventoryManagement</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLineItem</name></clazz><method><name>getVariantTitle</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLineItem</name></clazz><method><name>getVendor</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLineItem</name></clazz><method><name>isGiftCard</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLineItem</name></clazz><method><name>isRequiresShipping</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLineItem</name></clazz><method><name>isTaxable</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyAddress</name></clazz><method><name>getAddress1</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyAddress</name></clazz><method><name>getAddress2</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyAddress</name></clazz><method><name>getCity</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyAddress</name></clazz><method><name>getCompany</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyAddress</name></clazz><method><name>getCountry</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyAddress</name></clazz><method><name>getCountryCode</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyAddress</name></clazz><method><name>getFirstName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyAddress</name></clazz><method><name>getLastname</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyAddress</name></clazz><method><name>getLatitude</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyAddress</name></clazz><method><name>getLongitude</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyAddress</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyAddress</name></clazz><method><name>getPhone</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyAddress</name></clazz><method><name>getProvince</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyAddress</name></clazz><method><name>getProvinceCode</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyAddress</name></clazz><method><name>getZip</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment$Status</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillment$Status;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment$Status</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillment$Status;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment$Status</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillment$Status;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment$Status</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillment$Status;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment$Status</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillment$Status;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment$Status</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillment$Status;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment$Status</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillment$Status;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment$Status</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillment$Status;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment$Status</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillment$Status;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment$Status</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillment$Status;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment$Status</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillment$Status;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment$Status</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyFulfillment$Status;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment$Status</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyCustomer</name></clazz><method><name>getCreatedAt</name></method><methodDesc>()Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyCustomer</name></clazz><method><name>getEmail</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyCustomer</name></clazz><method><name>getFirstName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyCustomer</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyCustomer</name></clazz><method><name>getLastname</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyCustomer</name></clazz><method><name>getNote</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyCustomer</name></clazz><method><name>getOrdersCount</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyCustomer</name></clazz><method><name>getPhone</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyCustomer</name></clazz><method><name>getState</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyCustomer</name></clazz><method><name>getTotalSpent</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyCustomer</name></clazz><method><name>getUpdatedAt</name></method><methodDesc>()Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyCustomer</name></clazz><method><name>isAcceptsMarketing</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLocation</name></clazz><method><name>getAddress1</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLocation</name></clazz><method><name>getAddress2</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.impl.ShopifyClientImplTest.givenSomeValidAccessTokenAndSubdomainWhenGettingShopifyLocationThenReturnShopifyLocations(com.shopify.client.impl.ShopifyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLocation</name></clazz><method><name>getCity</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLocation</name></clazz><method><name>getCountry</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLocation</name></clazz><method><name>getCountryCode</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLocation</name></clazz><method><name>getCountryName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLocation</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLocation</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLocation</name></clazz><method><name>getPhone</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLocation</name></clazz><method><name>getProvince</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLocation</name></clazz><method><name>getProvinceCode</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLocation</name></clazz><method><name>getZip</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.impl.ShopifyClientImplTest.givenSomeValidAccessTokenAndSubdomainWhenGettingShopifyLocationThenReturnShopifyLocations(com.shopify.client.impl.ShopifyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrderRisk</name></clazz><method><name>getCheckoutId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrderRisk</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrderRisk</name></clazz><method><name>getMerchantMessage</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrderRisk</name></clazz><method><name>getMessage</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrderRisk</name></clazz><method><name>getOrderId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrderRisk</name></clazz><method><name>getRecommendation</name></method><methodDesc>()Lcom/shopify/client/model/OrderRiskRecommendation;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrderRisk</name></clazz><method><name>getScore</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrderRisk</name></clazz><method><name>getSource</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrderRisk</name></clazz><method><name>isCauseCancel</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrderRisk</name></clazz><method><name>isDisplay</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationCharge</name></clazz><method><name>getActivatedOn</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationCharge</name></clazz><method><name>getApiClientId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationCharge</name></clazz><method><name>getBillingOn</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationCharge</name></clazz><method><name>getCancelledOn</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationCharge</name></clazz><method><name>getConfirmationUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationCharge</name></clazz><method><name>getCreatedAt</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationCharge</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationCharge</name></clazz><method><name>getStatus</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationCharge</name></clazz><method><name>getTrialEndsOn</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationCharge</name></clazz><method><name>getUpdatedOn</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProducts</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProducts</name></clazz><method><name>containsKey</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProducts</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyProduct;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProducts</name></clazz><method><name>getVariants</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProducts</name></clazz><method><name>getVariants</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProducts</name></clazz><method><name>size</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProducts</name></clazz><method><name>values</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getCustomer</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyCustomer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getNumber</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getShippingAddress</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyAddress;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getShippingLines</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getSourceName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrder</name></clazz><method><name>getSubtotalPrice</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Metafield</name></clazz><method><name>getCreatedAt</name></method><methodDesc>()Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Metafield</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Metafield</name></clazz><method><name>getOwnerId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Metafield</name></clazz><method><name>getOwnerResource</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Metafield</name></clazz><method><name>getUpdatedAt</name></method><methodDesc>()Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment</name></clazz><method><name>getCreatedAt</name></method><methodDesc>()Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.impl.ShopifyClientImplTest.givenSomeValidAccessTokenAndSubdomainAndValidRequestWhenCancelingFulfillmentsThenCancelFulfillments(com.shopify.client.impl.ShopifyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment</name></clazz><method><name>getStatus</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment</name></clazz><method><name>getTrackingUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.impl.ShopifyClientImplTest.givenSomePageAndCreatedAtMinOrdersWhenRetrievingOrdersThenRetrieveOrdersWithCorrectValues(com.shopify.client.impl.ShopifyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillment</name></clazz><method><name>getUpdatedAt</name></method><methodDesc>()Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.impl.ShopifyClientImplTest.givenSomeValidAccessTokenAndSubdomainAndValidRequestWhenCancelingFulfillmentsThenCancelFulfillments(com.shopify.client.impl.ShopifyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyShippingLine</name></clazz><method><name>getCode</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyShippingLine</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyShippingLine</name></clazz><method><name>getPrice</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyShippingLine</name></clazz><method><name>getSource</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyShippingLine</name></clazz><method><name>getTitle</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.impl.ShopifyClientImplTest.givenSomeValidAccessTokenAndSubdomainAndValidRequestWhenUpdatingVariantThenUpdateAndReturnVariant(com.shopify.client.impl.ShopifyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>getInventoryItemId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>getInventoryQuantity</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>getProductId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariant</name></clazz><method><name>getTitle</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/impl/ShopifyClientImpl$1</name></clazz><method><name>onRetry</name></method><methodDesc>(Lcom/github/rholder/retry/Attempt;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/impl/ShopifyClientImpl$1</name></clazz><method><name>onRetry</name></method><methodDesc>(Lcom/github/rholder/retry/Attempt;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/impl/ShopifyClientImpl$1</name></clazz><method><name>onRetry</name></method><methodDesc>(Lcom/github/rholder/retry/Attempt;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyTaxLine</name></clazz><method><name>getPrice</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyTaxLine</name></clazz><method><name>getRate</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyTaxLine</name></clazz><method><name>getTitle</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Option</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Option</name></clazz><method><name>getProductId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Option</name></clazz><method><name>getValues</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Image</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Image</name></clazz><method><name>getProductId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Image</name></clazz><method><name>getVariantIds</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyAttribute</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyAttribute</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProduct</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProduct</name></clazz><method><name>getImage</name></method><methodDesc>()Lcom/shopify/client/model/Image;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withInventoryItemId</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$BuildStep;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantUpdateRequest$Steps</name></clazz><method><name>withInventoryItemId</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/ShopifyVariantUpdateRequest$BuildStep;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrderRisksRoot</name></clazz><method><name>getRisks</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/MetafieldRoot</name></clazz><method><name>getMetafield</name></method><methodDesc>()Lcom/shopify/client/model/Metafield;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/InventoryManagement</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/InventoryManagement;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyErrors</name></clazz><method><name>getBase</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrderRoot</name></clazz><method><name>getOrder</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyOrder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/InventoryPolicy</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/InventoryPolicy;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/Count</name></clazz><method><name>getCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyOrdersRoot</name></clazz><method><name>getOrders</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.impl.ShopifyClientImplTest.givenSomePageAndCreatedAtMinOrdersWhenRetrievingOrdersThenRetrieveOrdersWithCorrectValues(com.shopify.client.impl.ShopifyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyRecurringApplicationChargeRoot</name></clazz><method><name>getRecurringApplicationCharge</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyRecurringApplicationCharge;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantCreationRequest$Steps</name></clazz><method><name>noFirstOption</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariantCreationRequest$SecondOptionStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/MetafieldValueType</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/shopify/client/model/MetafieldValueType;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyVariantRoot</name></clazz><method><name>getVariant</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyVariant;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.impl.ShopifyClientImplTest.givenSomeValidAccessTokenAndSubdomainAndValidRequestWhenUpdatingVariantThenUpdateAndReturnVariant(com.shopify.client.impl.ShopifyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/channelape/shopify/business/service/factories/ShopifyClientFactory</name></clazz><method><name>createClient</name></method><methodDesc>(Ljavax/ws/rs/client/Client;Ljava/lang/String;Ljava/lang/String;)Lcom/shopify/client/ShopifyClient;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyCancelOrderRequest</name></clazz><method><name>getReason</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyImageRoot</name></clazz><method><name>getImage</name></method><methodDesc>()Lcom/shopify/client/model/Image;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductRoot</name></clazz><method><name>getProduct</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyProduct;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyErrorsRoot</name></clazz><method><name>getErrors</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyErrors;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/MetafieldsRoot</name></clazz><method><name>getMetafields</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyLocationsRoot</name></clazz><method><name>getLocations</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.impl.ShopifyClientImplTest.givenSomeValidAccessTokenAndSubdomainWhenGettingShopifyLocationThenReturnShopifyLocations(com.shopify.client.impl.ShopifyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyFulfillmentRoot</name></clazz><method><name>getFulfillment</name></method><methodDesc>()Lcom/shopify/client/model/ShopifyFulfillment;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.shopify.client.impl.ShopifyClientImplTest.givenSomeValidAccessTokenAndSubdomainAndValidRequestWhenCancelingFulfillmentsThenCancelFulfillments(com.shopify.client.impl.ShopifyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/shopify/client/model/ShopifyProductsRoot</name></clazz><method><name>getProducts</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
